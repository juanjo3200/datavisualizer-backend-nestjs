{"version":3,"sources":["F:/projects/datavisualizer-fronted/src/$_lazy_route_resource lazy","F:/projects/datavisualizer-fronted/src/app/app-routing.module.ts","F:/projects/datavisualizer-fronted/src/app/app.component.css","F:/projects/datavisualizer-fronted/src/app/app.component.html","F:/projects/datavisualizer-fronted/src/app/app.component.ts","F:/projects/datavisualizer-fronted/src/app/app.material.module.ts","F:/projects/datavisualizer-fronted/src/app/app.module.ts","F:/projects/datavisualizer-fronted/src/app/components/admin-panel/admin-panel.component.css","F:/projects/datavisualizer-fronted/src/app/components/admin-panel/admin-panel.component.html","F:/projects/datavisualizer-fronted/src/app/components/admin-panel/admin-panel.component.ts","F:/projects/datavisualizer-fronted/src/app/components/databases/databases.component.css","F:/projects/datavisualizer-fronted/src/app/components/databases/databases.component.html","F:/projects/datavisualizer-fronted/src/app/components/databases/databases.component.ts","F:/projects/datavisualizer-fronted/src/app/components/dialogContent/dialogContent.component.ts","F:/projects/datavisualizer-fronted/src/app/components/error/error.component.css","F:/projects/datavisualizer-fronted/src/app/components/error/error.component.html","F:/projects/datavisualizer-fronted/src/app/components/error/error.component.ts","F:/projects/datavisualizer-fronted/src/app/components/home/home.component.css","F:/projects/datavisualizer-fronted/src/app/components/home/home.component.html","F:/projects/datavisualizer-fronted/src/app/components/home/home.component.ts","F:/projects/datavisualizer-fronted/src/app/components/imagegrid/imagegrid.component.css","F:/projects/datavisualizer-fronted/src/app/components/imagegrid/imagegrid.component.html","F:/projects/datavisualizer-fronted/src/app/components/imagegrid/imagegrid.component.ts","F:/projects/datavisualizer-fronted/src/app/components/login/login.component.css","F:/projects/datavisualizer-fronted/src/app/components/login/login.component.html","F:/projects/datavisualizer-fronted/src/app/components/login/login.component.ts","F:/projects/datavisualizer-fronted/src/app/components/models/database.entity.ts","F:/projects/datavisualizer-fronted/src/app/components/models/queueDB.entity.ts","F:/projects/datavisualizer-fronted/src/app/components/models/user.entity.ts","F:/projects/datavisualizer-fronted/src/app/components/models/visualization.entity.ts","F:/projects/datavisualizer-fronted/src/app/components/queue-db/queue-db.component.css","F:/projects/datavisualizer-fronted/src/app/components/queue-db/queue-db.component.html","F:/projects/datavisualizer-fronted/src/app/components/queue-db/queue-db.component.ts","F:/projects/datavisualizer-fronted/src/app/components/queuedb-detail/queuedb-detail.component.css","F:/projects/datavisualizer-fronted/src/app/components/queuedb-detail/queuedb-detail.component.html","F:/projects/datavisualizer-fronted/src/app/components/queuedb-detail/queuedb-detail.component.ts","F:/projects/datavisualizer-fronted/src/app/components/queuedb-list/queuedb-list.component.css","F:/projects/datavisualizer-fronted/src/app/components/queuedb-list/queuedb-list.component.html","F:/projects/datavisualizer-fronted/src/app/components/queuedb-list/queuedb-list.component.ts","F:/projects/datavisualizer-fronted/src/app/components/register/register.component.css","F:/projects/datavisualizer-fronted/src/app/components/register/register.component.html","F:/projects/datavisualizer-fronted/src/app/components/register/register.component.ts","F:/projects/datavisualizer-fronted/src/app/components/stepper/stepper.component.css","F:/projects/datavisualizer-fronted/src/app/components/stepper/stepper.component.html","F:/projects/datavisualizer-fronted/src/app/components/stepper/stepper.component.ts","F:/projects/datavisualizer-fronted/src/app/components/user-data/user-data.component.css","F:/projects/datavisualizer-fronted/src/app/components/user-data/user-data.component.html","F:/projects/datavisualizer-fronted/src/app/components/user-data/user-data.component.ts","F:/projects/datavisualizer-fronted/src/app/components/viz-view/viz-view.component.css","F:/projects/datavisualizer-fronted/src/app/components/viz-view/viz-view.component.html","F:/projects/datavisualizer-fronted/src/app/components/viz-view/viz-view.component.ts","F:/projects/datavisualizer-fronted/src/app/components/vizqueue-detail/vizqueue-detail.component.css","F:/projects/datavisualizer-fronted/src/app/components/vizqueue-detail/vizqueue-detail.component.html","F:/projects/datavisualizer-fronted/src/app/components/vizqueue-detail/vizqueue-detail.component.ts","F:/projects/datavisualizer-fronted/src/app/components/vizqueue-list/vizqueue-list.component.css","F:/projects/datavisualizer-fronted/src/app/components/vizqueue-list/vizqueue-list.component.html","F:/projects/datavisualizer-fronted/src/app/components/vizqueue-list/vizqueue-list.component.ts","F:/projects/datavisualizer-fronted/src/app/services/api/database.service.ts","F:/projects/datavisualizer-fronted/src/app/services/api/user.service.ts","F:/projects/datavisualizer-fronted/src/app/services/api/viz.service.ts","F:/projects/datavisualizer-fronted/src/app/services/config/db.config.ts","F:/projects/datavisualizer-fronted/src/app/services/guards/admin.guard.ts","F:/projects/datavisualizer-fronted/src/app/services/guards/loggin.guard.ts","F:/projects/datavisualizer-fronted/src/app/services/guards/protectLoggin.guard.ts","F:/projects/datavisualizer-fronted/src/app/services/validator/emailUniq.directive.ts","F:/projects/datavisualizer-fronted/src/app/services/validator/equal-validate.directive.ts","F:/projects/datavisualizer-fronted/src/environments/environment.ts","F:/projects/datavisualizer-fronted/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVyC;AACc;AAEvD,aAAa;AACuD;AACA;AACH;AACY;AACE;AACL;AACM;AACD;AAClB;AACc;AACC;AACS;AAC1B;AACmC;AACN;AACG;AACM;AACrB;AAE5E,IAAM,MAAM,GAAY;IAEtB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yFAAc,EAAE,WAAW,EAAE,CAAC,iGAAkB,CAAC,EAAC;IAC9E;QACE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sFAAa;QACtC,WAAW,EAAE,CAAC,mFAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;YACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAG,qGAAkB,EAAC;YACpD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAgB,EAAE;YACpD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oGAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,qGAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,kGAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,iFAAU,CAAC,EAAG,SAAS,EAAE,2GAAmB,EAAE,QAAQ,EAC1F;oBACA,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;oBAC1D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8GAAoB,EAAE;oBACxD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,oHAAsB,EAAE;oBAChE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iHAAqB,EAAE;oBAC1D,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,uHAAuB,EAAE;iBAAC,EAAE;SAAC;KACzE;IACD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAE,WAAW,EAAE,CAAC,iGAAkB,CAAC,EAAE;IACrF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,yFAAc,EAAC;CAEzC,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,uEAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC;YACvB,OAAO,EAAE,CAAC,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;ACvD7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,sD;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;ACPgB;AAI4F;AAgBrI;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAd7B,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0EAAe,EAAE,4EAAiB,EAAE,2EAAgB,EAAE,yEAAc,EAAE,0EAAe,EAAE,4EAAiB;gBACvG,+EAAoB,EAAE,0EAAe,EAAE,+EAAoB,EAAE,wEAAa,EAAE,0EAAe,EAAE,4EAAiB,EAAE,0EAAe;gBAC9H,yEAAc,EAAE,2EAAgB,EAAE,wEAAa,EAAE,wEAAa,EAAE,yEAAc,EAAE,mFAAwB;gBAC1G,wEAAa,EAAE,wEAAa,EAAE,2EAAgB,EAAE,6EAAkB,EAAE,yEAAc,EAAE,6EAAkB;aACvG;YACD,OAAO,EAAE;gBACP,0EAAe,EAAE,4EAAiB,EAAE,2EAAgB,EAAE,yEAAc,EAAE,0EAAe,EAAE,4EAAiB,EAAE,+EAAoB;gBAC7H,0EAAe,EAAE,+EAAoB,EAAE,wEAAa,EAAE,0EAAe,EAAE,4EAAiB,EAAE,0EAAe,EAAE,yEAAc;gBACzH,2EAAgB,EAAE,wEAAa,EAAE,wEAAa,EAAE,yEAAc,EAAE,mFAAwB,EAAE,wEAAa;gBACxG,wEAAa,EAAE,2EAAgB,EAAE,6EAAkB,EAAE,yEAAc,EAAE,6EAAkB;aACxF;SACF,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB4B;AACjB;AACsC;AACpC;AACI;AACoB;AACU;AACpB;AACW;AACH;AACC;AACa;AACrB;AACG;AACc;AACQ;AACJ;AACL;AAChB;AACkC;AACZ;AACd;AACc;AACJ;AACS;AAC1B;AACmC;AACN;AACS;AACN;AACnC;AACoB;AAoC5E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,yFAAc;gBACd,kGAAiB;gBACjB,yFAAc;gBACd,sFAAa;gBACb,qGAAc;gBACd,yGAAuB;gBACvB,qGAAiB;gBACjB,gGAAgB;gBAChB,kHAAsB;gBACtB,sGAAkB;gBAClB,sGAAkB;gBAClB,kGAAgB;gBAChB,2GAAmB;gBACnB,oHAAsB;gBACtB,8GAAoB;gBACpB,uHAAuB;gBACvB,iHAAqB;gBACrB,kGAAgB;aACjB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,qGAAuB;gBACvB,6EAAgB;gBAChB,oEAAW;gBACX,iEAAU;gBACV,gFAAiB;gBACjB,4EAAmB;aACpB;YACD,SAAS,EAAE,CAAC,gFAAW,EAAE,mFAAW,EAAE,iFAAU,EAAE,iGAAkB,EAAE,wFAAe,EAAE,8EAAU,CAAC;YAClG,SAAS,EAAE,CAAC,oEAAY,CAAC;YACzB,eAAe,EAAE,CAAC,kHAAsB,CAAC;SAC1C,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;ACnEtB;AACA;;;AAGA;AACA,0CAA2C,gCAAgC,KAAK,2BAA2B,oBAAoB,KAAK;;AAEpI;;;AAGA;AACA,2C;;;;;;;ACXA,2c;;;;;;;;;;;;;;;;;;;ACAqE;AAQrE;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAN/B,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACtC,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;ACRhC;AACA;;;AAGA;AACA,gDAAiD,oBAAoB,OAAO,0BAA0B,uBAAuB,OAAO,2CAA2C,0BAA0B,OAAO,qBAAqB,uBAAuB,yBAAyB,sBAAsB,KAAK;;AAEhT;;;AAGA;AACA,2C;;;;;;;ACXA,0CAA0C,ygBAAygB,iBAAiB,gNAAgN,sBAAsB,yRAAyR,cAAc,KAAK,YAAY,s8BAAs8B,2BAA2B,gP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv/D;AACoB;AACtC;AAGY;AACR;AAM9D;IAOE,4BAAoB,eAAgC,EAAU,WAAwB,EAAU,OAAkB;QAA9F,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAW;QALlH,qBAAgB,GAAG,CAAC,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QAEvD,cAAS,GAAG,IAAI,gFAAc,CAAW,IAAI,EAAE,EAAE,CAAC,CAAC;QAEnD,kBAAa,GAAG,CAAC,CAAC;IACoG,CAAC;IAEjH,qCAAQ,GAAd;;;;;;;wBACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;4BACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACvC,CAAC;wBACiB,qBAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;;wBAArD,SAAS,GAAG,SAAyC;wBAC3D,SAAS,CAAC,SAAS,CAAC,kBAAQ;4BAC1B,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;4BAC5B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC;4BACtC,KAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAW,KAAI,CAAC,IAAI,CAAC,CAAC;wBAChE,CAAC,CAAC,CAAC;;;;;KACJ;IACD,gFAAgF;IAChF,0CAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,yCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACpE,CAAC;IAGK,2CAAc,GAApB;;;;;;4CACa,QAAQ;;;;;wCACb,KAAK,GAAW,OAAK,IAAI,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,KAAK,QAAQ,EAAd,CAAc,CAAC,CAAC;wCAC7D,OAAK,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wCACtC,OAAK,UAAU,GAAG,IAAI,6EAAkB,CAAW,OAAK,UAAU,CAAC,IAAI,CAAC,CAAC;wCAEvD,qBAAM,OAAK,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;;wCAA/D,SAAS,GAAG,SAAmD;wCACrE,SAAS,CAAC,SAAS,EAAE,CAAC;;;;;;8BANsB,EAAvB,SAAI,CAAC,SAAS,CAAC,QAAQ;;;6BAAvB,eAAuB;wBAAnC,QAAQ;sDAAR,QAAQ;;;;;wBAAI,IAAuB;;;wBAQ9C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;;;;;KACxB;IAED,wCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,mDAAmD;QAC5F,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IACD,oCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAtDU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAQqC,uFAAe,EAAuB,+EAAW,EAAmB,oEAAS;OAPvG,kBAAkB,CAuD9B;IAAD,yBAAC;CAAA;AAvD8B;;;;;;;;;;;;;;;;;;;;;;;;ACZ6B;AACiB;AAM7E;IACI,gCAA6C,IAAS,EAAqB,SAA+C;QAA7E,SAAI,GAAJ,IAAI,CAAK;QAAqB,cAAS,GAAT,SAAS,CAAsC;IAAI,CAAC;IAE/H,0CAAS,GAAT;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IALQ,sBAAsB;QALlC,wEAAS,CAAC;YACP,QAAQ,EAAE,yGAEX;SACF,CAAC;QAEgB,gFAAM,CAAC,0EAAe,CAAC,GAAoB,kFAAQ,EAAE;iDAAmB,uEAAY;OADzF,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;ACPnC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,sP;;;;;;;;;;;;;;;;;;;ACAqE;AAQrE;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAN1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;ACR3B;AACA;;;AAGA;AACA,+CAAgD,0BAA0B,sBAAsB,sBAAsB,SAAS,kBAAkB,iCAAiC,mBAAmB,kBAAkB,KAAK,4BAA4B,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,yBAAyB,aAAa,gBAAgB,cAAc,eAAe,KAAK;;AAE3iB;;;AAGA;AACA,2C;;;;;;;ACXA,wrE;;;;;;;;;;;;;;;;;;;;;ACAkD;AACY;AACL;AASzD;IAEE,uBAAoB,YAAyB,EAAU,MAAc;QAAjD,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE1E,gCAAQ,GAAR;IACA,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IACD,+BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAZU,aAAa;QALzB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGkC,+EAAW,EAAkB,+DAAM;OAF1D,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB;;;;;;;;ACX1B;AACA;;;AAGA;AACA,sCAAuC,uBAAuB,yBAAyB,sBAAsB,KAAK,sBAAsB,sBAAsB,sBAAsB,yBAAyB,KAAK,oBAAoB,yBAAyB,iBAAiB,KAAK,gBAAgB,iBAAiB,qBAAqB,kBAAkB,mBAAmB,2BAA2B,0CAA0C,0CAA0C,6BAA6B,yBAAyB,KAAK,iBAAiB,2BAA2B,iBAAiB,yBAAyB,eAAe,gBAAgB,+CAA+C,+CAA+C,2CAA2C,yBAAyB,KAAK,iCAAiC,mBAAmB,KAAK,kCAAkC,iBAAiB,KAAK,eAAe,6BAA6B,wBAAwB,sBAAsB,yBAAyB,KAAK;;AAE/hC;;;AAGA;AACA,2C;;;;;;;ACXA,sCAAsC,6CAA6C,yPAAyP,oBAAoB,6NAA6N,YAAY,0RAA0R,2D;;;;;;;;;;;;;;;;;;;;;ACA9xB;AACP;AACrB;AAOzC;IAIE,4BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,qCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,kBAAQ;YAC9C,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,aAAG,IAAI,UAAG,CAAC,GAAG,EAAP,CAAO,CAAC,CAAC;YAChD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sCAAS,GAAT,UAAU,GAAW;QACnB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,gEAAgE,CAAC;QACnF,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACD,gCAAG,GAAH,UAAI,GAAG;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC;IApBU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAKiC,+EAAW,EAAkB,+DAAM;OAJzD,kBAAkB,CAsB9B;IAAD,yBAAC;CAAA;AAtB8B;;;;;;;;ACT/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,0oC;;;;;;;;;;;;;;;;;;;;;;;;ACAoE;AACvB;AACiB;AACL;AACqB;AACI;AAMlF;IAIE,wBAAoB,YAAyB,EACnC,MAAc,EAAU,OAAkB;QADhC,iBAAY,GAAZ,YAAY,CAAa;QACnC,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAW;IAAI,CAAC;IAEzD,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,iCAAQ,GAAR,UAAS,SAAS;QAAlB,iBA8BC;QA7BC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC1C,kBAAQ;YACN,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC9B,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7C,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,SAAS,CAClD,kBAAQ;oBACN,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAC5B,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;oBACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjC,CAAC,EAAE,eAAK;oBACN,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;gBAC1B,CAAC,CACF;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,iEAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;YACjD,CAAC;QACH,CAAC,EACD,eAAK;YACH,EAAE,EAAC,KAAK,CAAC,KAAK,CAAC,EAAC;gBACd,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBACf,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;YAAA,IAAI,EAAC;gBACJ,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAU,GAAV,UAAW,OAAO;QAChB,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAG,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAC;SACvD,CAAC,CAAC;IACL,CAAC;IA/CU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKkC,+EAAW;YAC3B,+DAAM,EAAmB,oEAAS;OALzC,cAAc,CAgD1B;IAAD,qBAAC;CAAA;AAhD0B;;;;;;;;;;ACX3B;AAAA;IAAA;IAKA,CAAC;IAAD,eAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;ACXD;AAAA;IAAA;IAKA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;ACLD;AAAA;IAEI,cACW,IAAY,EACZ,KAAa,EACb,QAAgB,EAChB,IAAY,EACZ,GAAc;QAJd,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,QAAG,GAAH,GAAG,CAAW;IACtB,CAAC;IACR,WAAC;AAAD,CAAC;;;;;;;;;;;ACTD;AAAA;IAAA;IAOA,CAAC;IAAD,oBAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;ACZD;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,2gBAA2gB,uBAAuB,osB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7d;AAClB;AACL;AACoC;AACZ;AACR;AAM9D;IAEE,0BAAoB,eAAgC,EAAU,YAAyB,EAAU,OAAkB;QAA/F,oBAAe,GAAf,eAAe,CAAiB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAAU,YAAO,GAAP,OAAO,CAAW;IAEnH,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,uEAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IAC3B,CAAC;IAEK,mCAAQ,GAAd,UAAe,eAAe;;;;;;4BACZ,qBAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;;wBAAhE,MAAM,GAAI,SAAsD;wBACtE,MAAM,CAAC,SAAS,CACd,kBAAQ;4BACN,KAAI,CAAC,UAAU,CAAC,iDAAiD,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;wBACtF,CAAC,EACD,eAAK;4BACH,KAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;4BAChE,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;wBAC1B,CAAC,CACF,CAAC;wBACF,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC;wBACtB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;wBACzB,eAAe,CAAC,KAAK,CAAC;4BACpB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;yBAC1F,CAAC,CAAC;;;;;KACJ;IAED,qCAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IApCU,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGqC,uFAAe,EAAwB,+EAAW,EAAmB,oEAAS;OAFxG,gBAAgB,CAqC5B;IAAD,uBAAC;CAAA;AArC4B;;;;;;;;ACX7B;AACA;;;AAGA;AACA,gDAAiD,oBAAoB,OAAO;;AAE5E;;;AAGA;AACA,2C;;;;;;;ACXA,wCAAwC,gjBAAgjB,wBAAwB,gnBAAgnB,qEAAqE,cAAc,SAAS,YAAY,6VAA6V,qBAAqB,qUAAqU,MAAM,ud;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA58D;AACA;AAGa;AACjB;AACP;AACoC;AAChC;AAMlD;IAKE,gCACU,KAAqB,EACrB,MAAc,EACd,eAAgC,EAChC,OAAkB;QAHlB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,YAAO,GAAP,OAAO,CAAW;IACxB,CAAC;IAEL,yCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,yEAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,KAAK,EAAS,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC1D,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC/B,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC3C,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACvD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACxD,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,KAAK,GAAG,IAAI,sEAAK,EAAE,CAAC;QACxB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACK,yCAAQ,GAAd,UAAe,YAAY;;;;;;4BAEV,qBAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;;wBAAjE,MAAM,GAAG,SAAwD;wBACvE,MAAM,CAAC,SAAS,CACd,UAAM,QAAQ;;;;;4CACS,qBAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;;wCAArE,YAAY,GAAG,SAAsD;wCAC3E,YAAY,CAAC,SAAS,CAAC,wBAAc;4CACnC,KAAI,CAAC,UAAU,CAAC,iDAAiD,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;4CACpF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;wCACxD,CAAC,CAAC,CAAC;;;;6BACJ,EACD,eAAK;4BACH,KAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;4BAChE,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;wBAC1B,CAAC,CACF,CAAC;;;;;KACH;IAED,2CAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IAtDU,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAOiB,uEAAc;YACb,+DAAM;YACG,uFAAe;YACvB,oEAAS;OATjB,sBAAsB,CAwDlC;IAAD,6BAAC;CAAA;AAxDkC;;;;;;;;ACdnC;AACA;;;AAGA;AACA,gDAAiD,oBAAoB,OAAO,sBAAsB,uBAAuB,OAAO,2CAA2C,0BAA0B,OAAO,uBAAuB,yBAAyB,2BAA2B,wBAAwB,OAAO;;AAEtT;;;AAGA;AACA,2C;;;;;;;ACXA,0CAA0C,4YAA4Y,iBAAiB,wMAAwM,sBAAsB,wdAAwd,2BAA2B,sH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnlC;AAC4B;AACvC;AAEY;AAEb;AAMzD;IAOE,8BAAoB,eAAgC,EAAU,KAAa;QAAvD,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAJ3E,qBAAgB,GAAG,CAAC,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QAEvD,cAAS,GAAG,IAAI,gFAAc,CAAU,IAAI,EAAE,EAAE,CAAC,CAAC;IAE6B,CAAC;IAE1E,uCAAQ,GAAd;;;;;;4BACoB,qBAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE;;wBAA1D,SAAS,GAAG,SAA8C;wBAChE,SAAS,CAAC,SAAS,CAAC,kBAAQ;4BAC1B,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;4BAC5B,KAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAU,KAAI,CAAC,IAAI,CAAC,CAAC;wBAC/D,CAAC,CAAC,CAAC;;;;;KACJ;IACD,gFAAgF;IAChF,4CAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,2CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACpE,CAAC;IAGD,0CAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,mDAAmD;QAC5F,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IAED,qCAAM,GAAN,UAAO,OAAO;QACZ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,gCAAgC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACxE,CAAC;IAvCU,oBAAoB;QALhC,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQqC,uFAAe,EAAiB,+DAAM;OAPhE,oBAAoB,CAwChC;IAAD,2BAAC;CAAA;AAxCgC;;;;;;;;ACZjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,oqBAAoqB,kBAAkB,u8C;;;;;;;;;;;;;;;;;;;;;;;ACAjnB;AAExB;AACiB;AAChB;AACoC;AAMlF;IAGE,2BAAoB,YAAyB,EAAU,OAAkB;QAArD,iBAAY,GAAZ,YAAY,CAAa;QAAU,YAAO,GAAP,OAAO,CAAW;IAAI,CAAC;IAE9E,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IACD,oCAAQ,GAAR,UAAS,YAAY;QAArB,iBAeC;QAdC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC7C,kBAAQ;YACN,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;gBAChB,KAAI,CAAC,UAAU,CAAC,sCAAsC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBACzE,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,KAAI,CAAC,IAAI,GAAG,IAAI,iEAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;YACjD,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,UAAU,CAAC,0BAA0B,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAO,KAAK,CAAC,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAG,IAAI,EAAG,IAAI,EAAC;SACrD,CAAC,CAAC;IACL,CAAC;IA9BU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAIkC,+EAAW,EAAmB,oEAAS;OAH9D,iBAAiB,CA+B7B;IAAD,wBAAC;CAAA;AA/B6B;;;;;;;;ACX9B;AACA;;;AAGA;AACA,gDAAiD,oBAAoB,OAAO,sBAAsB,uBAAuB,OAAO,2CAA2C,0BAA0B,OAAO;;AAE5M;;;AAGA;AACA,2C;;;;;;;ACXA,+RAA+R,wcAAwc,iBAAiB,0OAA0O,sBAAsB,qUAAqU,cAAc,KAAK,YAAY,i5BAAi5B,2BAA2B,gnBAAgnB,yDAAyD,mCAAmC,miBAAmiB,cAAc,4BAA4B,cAAc,07BAA07B,kBAAkB,uZAAuZ,eAAe,6PAA6P,yDAAyD,mCAAmC,8UAA8U,cAAc,0BAA0B,cAAc,g2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjkL;AACgD;AACpD;AACC;AACwB;AACH;AACR;AAED;AACV;AAM5D;IAyBE,0BAAoB,eAAgC,EAAU,UAAsB,EAAU,OAAkB,EAAU,EAAe,EAAU,MAAc;QAA7I,oBAAe,GAAf,eAAe,CAAiB;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAW;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAxBjK,qBAAgB,GAAG,CAAC,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEjE,cAAS,GAAG,IAAI,gFAAc,CAAW,IAAI,EAAE,EAAE,CAAC,CAAC;QACnD,kBAAa,GAAG,IAAI,mFAAa,EAAE,CAAC;QAsBlC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAhBD,gFAAgF;IAChF,wCAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,uCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACpE,CAAC;IAMK,mCAAQ,GAAd;;;;;;4BACoB,qBAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;;wBAArD,SAAS,GAAG,SAAyC;wBAC3D,SAAS,CAAC,SAAS,CAAC,kBAAQ;4BAC1B,KAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAW,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;wBACtE,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;wBAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;;;;;KACxD;IAED,qCAAU,GAAV;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC/B,cAAc,EAAE,CAAC,EAAE,CAAC;SACrB,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd,UAAe,IAAI;QACjB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;IACL,CAAC;IACD,yCAAc,GAAd,UAAe,IAAI;QACjB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IACD,sBAAI,sCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;QAChE,CAAC;;;OAAA;IAED,sBAAI,0CAAY;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAc,CAAC;QAC7D,CAAC;;;OAAA;IAED,wCAAa,GAAb,UAAc,WAAW;QACvB,IAAM,WAAW,GAAG,IAAI,KAAK,EAAa,CAAC;QAC3C,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACxD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACnE,CAAC;QACD,IAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;IACtE,CAAC;IAED,2CAAgB,GAAhB;QACE,IAAM,OAAO,GAAc,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAE1E,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,4CAAiB,GAAjB;QACE,IAAM,OAAO,GAAc,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAE9E,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,sCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,mDAAmD;QAC5F,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IAED,qCAAU,GAAV,UAAW,MAAoB;QAC7B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,IAAI,KAAK,OAAO,EAAtB,CAAsB,CAAC,CAAC;IACxD,CAAC;IAED,sCAAW,GAAX,UAAY,MAAoB;QAC9B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,IAAI,KAAK,UAAU,EAAzB,CAAyB,CAAC,CAAC;IAC3D,CAAC;IAED,yCAAc,GAAd,UAAe,OAAmB;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC5C,OAAO,CAAC,IAAI,EAAE,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,2CAA2C,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC/E,CAAC;IACH,CAAC;IAED,yCAAc,GAAd;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,wCAAa,GAAb;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,0CAAe,GAAf,UAAgB,OAAmB;QACjC,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,yGAAyG;QACzG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAO;gBAC7D,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,WAAW,GAAG,KAAK,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,EAAE,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,uEAAuE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC3G,CAAC;QAED,IAAM,WAAW,GAAG,IAAI,KAAK,EAAa,CAAC;QAC3C,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACpE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,IAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;IACnE,CAAC;IAED,oCAAS,GAAT;QACE,IAAM,GAAG,GAAG,IAAI,mFAAa,EAAE,CAAC;QAChC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,SAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAQ;YACtC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,GAAG,IAAI,KAAK,EAAU,CAAC;QAClC,0CAA0C;QAE1C,IAAM,YAAY,GAAG,IAAI,4EAAM,EAAE,CAAC;QAClC,YAAY,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACzC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9E,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC5C,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAC/B,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChC,qBAAqB;gBACrB,IAAM,eAAe,GAAG,IAAI,4EAAM,EAAE,CAAC;gBACrC,eAAe,CAAC,MAAM,GAAG,WAAW,CAAC;gBACrC,eAAe,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC;gBAC7C,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAElC,IAAI,aAAW,GAAG,IAAI,CAAC;gBACvB,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;oBACrC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBAChC,aAAW,GAAG,KAAK,CAAC;oBACtB,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,aAAW,CAAC,CAAC,CAAC;oBAChB,mBAAmB;oBACnB,IAAM,cAAc,GAAG,IAAI,4EAAM,EAAE,CAAC;oBACpC,cAAc,CAAC,MAAM,GAAG,UAAU,CAAC;oBACnC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;oBAC/D,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACjC,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACzC,wBAAwB;wBACxB,IAAM,UAAU,GAAG,IAAI,4EAAM,EAAE,CAAC;wBAChC,UAAU,CAAC,MAAM,GAAG,gBAAgB,CAAC;wBACrC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;wBAC7D,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAE7B,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC7C,IAAI,CAAC,UAAU,CAAC,qCAAqC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;wBACxE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC3C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,UAAU,CAAC,kEAAkE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;oBACtG,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,UAAU,CAAC,iDAAiD,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBACrF,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,CAAC,0CAA0C,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9E,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,4CAA4C,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAChF,CAAC;IAEH,CAAC;IAED,qCAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IAxNU,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCA0BqC,uFAAe,EAAsB,6EAAU,EAAmB,oEAAS,EAAc,mEAAW,EAAkB,+DAAM;OAzBtJ,gBAAgB,CAyN5B;IAAD,uBAAC;CAAA;AAzN4B;;;;;;;;ACf7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,siBAAsiB,kBAAkB,4xC;;;;;;;;;;;;;;;;;;;;;;;ACAtgB;AACY;AAEjB;AACC;AACoC;AAMlF;IAGE,2BAAoB,YAAyB,EAAU,OAAkB;QAArD,iBAAY,GAAZ,YAAY,CAAa;QAAU,YAAO,GAAP,OAAO,CAAW;IACzE,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtF,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,oCAAQ,GAAR,UAAS,YAAY;QAArB,iBAoBC;QAnBC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,kBAAQ;YACN,EAAE,EAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;gBACjB,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBACzC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC3C,KAAI,CAAC,UAAU,CAAC,2CAA2C,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAChF,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,UAAU,CAAC,mDAAmD,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACvF,CAAC;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;QAC1B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,YAAY,CAAC,KAAK,CAAC,EAAC,IAAI,EAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC7F,WAAW,EAAE,IAAI,CAAC,eAAe,EAAC,CAAC,CAAC;IACxC,CAAC;IAED,sCAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IAvCU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAIkC,+EAAW,EAAmB,oEAAS;OAH9D,iBAAiB,CAwC7B;IAAD,wBAAC;CAAA;AAxC6B;;;;;;;;ACX9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wDAAwD,4B;;;;;;;;;;;;;;;;;;;;;ACAa;AACT;AACX;AAajD;IAIE,0BAAoB,UAAsB,EAAU,KAAqB;QAArD,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9E,mCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC/C,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;YACpB,IAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC7D,IAAM,GAAG,GAAG,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC;YACzB,IAAM,OAAO,GAAG;gBACd,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE;oBAClB,+CAA+C;gBACjD,CAAC;aACF,CAAC;YACF,KAAI,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;YAChE,yDAAyD;QAC3D,CAAC,CAAC,CAAC;IAEL,CAAC;IAtBU,gBAAgB;QAN5B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACtC,CAAC;yCAKgC,6EAAU,EAAiB,uEAAc;OAJ9D,gBAAgB,CAwB5B;IAAD,uBAAC;CAAA;AAxB4B;;;;;;;;ACf7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,uCAAuC,siBAAsiB,mBAAmB,0pBAA0pB,mBAAmB,wIAAwI,kBAAkB,qMAAqM,kBAAkB,IAAI,iBAAiB,6NAA6N,MAAM,sPAAsP,yBAAyB,8X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5kE;AACA;AAEX;AACoC;AACtB;AACW;AAOvE;IAKE,iCACU,KAAqB,EACrB,MAAc,EACd,UAAsB,EACtB,OAAkB;QAHlB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAW;IACxB,CAAC;IAEL,0CAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,GAAG,IAAI,mFAAa,EAAE,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,KAAK,EAAO,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,KAAK,EAAU,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC/C,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;YACpB,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;gBAC7B,IAAI,CAAC;oBACH,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzD,CAAC;gBAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC7C,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,0CAAQ,GAAd,UAAe,YAAY;;;;;gBACnB,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvD,MAAM,CAAC,SAAS,CACd,UAAM,QAAQ;;wBACZ,IAAI,CAAC,UAAU,CAAC,iDAAiD,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;wBACpF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;;;qBACxD,EACD,eAAK;oBACH,KAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;oBAChE,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;gBAC1B,CAAC,CACF,CAAC;;;;KACH;IAED,4CAAU,GAAV,UAAW,OAAO,EAAE,KAAK,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACxD,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IAnDU,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAOiB,uEAAc;YACb,+DAAM;YACF,6EAAU;YACb,oEAAS;OATjB,uBAAuB,CAqDnC;IAAD,8BAAC;CAAA;AArDmC;;;;;;;;ACbpC;AACA;;;AAGA;AACA,gDAAiD,oBAAoB,OAAO,sBAAsB,uBAAuB,OAAO,2CAA2C,0BAA0B,OAAO,uBAAuB,yBAAyB,2BAA2B,wBAAwB,OAAO;;AAEtT;;;AAGA;AACA,2C;;;;;;;ACXA,0CAA0C,uZAAuZ,YAAY,wNAAwN,2YAA2Y,eAAe,wSAAwS,kBAAkB,IAAI,iBAAiB,+UAA+U,kBAAkB,+pBAA+pB,2BAA2B,wH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp2E;AAC4B;AACvC;AAGD;AACG;AAM5D;IAOE,+BAAoB,UAAsB,EAAU,KAAa;QAA7C,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAAQ;QAJjE,qBAAgB,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAEpF,cAAS,GAAG,IAAI,gFAAc,CAAgB,IAAI,EAAE,EAAE,CAAC,CAAC;IAEa,CAAC;IAEhE,wCAAQ,GAAd;;;;;gBACQ,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;gBAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAO,CAAC;gBAC7B,cAAc,CAAC,SAAS,CAAC,kBAAQ;oBAC/B,QAAQ,CAAC,OAAO,CAAC,iBAAO;wBACtB,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;4BAC5B,IAAI,CAAC;gCACH,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACpD,CAAC;4BAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCACf,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;4BACxC,CAAC;wBACH,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAgB,KAAI,CAAC,IAAI,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC;;;;KACJ;IACD,gFAAgF;IAChF,6CAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,4CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACpE,CAAC;IAGD,2CAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,mDAAmD;QAC5F,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IAEK,sCAAM,GAAZ,UAAa,GAAG;;;;;;wBACV,KAAK,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,KAAK,GAAG,EAAT,CAAS,CAAC,CAAC;wBACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAgB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wBAE3D,qBAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;;wBAAjD,UAAU,GAAG,SAAoC;wBACvD,UAAU,CAAC,SAAS,EAAE,CAAC;;;;;KAExB;IAED,sCAAM,GAAN,UAAO,GAAG;QACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,iCAAiC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IA3DU,qBAAqB;QALjC,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAQgC,6EAAU,EAAiB,+DAAM;OAPtD,qBAAqB,CA4DjC;IAAD,4BAAC;CAAA;AA5DiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACa;AACzB;AAEW;AAK1C;IAEI,yBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC3B,IAAI,CAAC,GAAG,GAAG,8DAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IAEK,sCAAY,GAAlB;;;;;;wBACQ,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACI,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;4BAAxE,sBAAO,SAAiE,EAAC;;;;KAE5E;IAGK,wCAAc,GAApB,UAAqB,QAAkB;;;;;;wBAC/B,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACI,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;4BAA3F,sBAAO,SAAoF,EAAC;;;;KAC/F;IAEK,wCAAc,GAApB,UAAqB,QAAQ;;;;;;wBACrB,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;wBACjC,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;4BAAjF,sBAAO,SAA0E,EAAC;;;;KAErF;IAIK,2CAAiB,GAAvB;;;;;;wBACQ,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACI,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;4BAAvE,sBAAO,SAAgE,EAAC;;;;KAE3E;IAED,0CAAgB,GAAhB,UAAiB,EAAE;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5E,CAAC;IACK,uCAAa,GAAnB,UAAoB,OAAgB;;;;;;wBAC5B,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;wBAChC,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;4BAAhF,sBAAO,SAAyE,EAAC;;;;KACpF;IAEK,uCAAa,GAAnB,UAAoB,OAAgB;;;;;;wBAC5B,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACI,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;4BAAzF,sBAAO,SAAkF,EAAC;;;;KAE7F;IACD,kCAAQ,GAAR;QACI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,qCAAW,GAAX;QACI,MAAM,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACjC,CAAC;IAED,sCAAY,GAAZ;QACI,MAAM,CAAC,CAAC;gBACJ,MAAM,EAAE,MAAM;gBACd,WAAW,EAAE,+jBAA+jB;gBAC5kB,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;aACpF;YACD;gBACI,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,+jBAA+jB;gBAC5kB,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;aACpF;YAED;gBACI,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,+jBAA+jB;gBAC5kB,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;aACpF;YACK;gBACF,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,+jBAA+jB;gBAC5kB,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;aACpF,CAAC,CAAC;IACP,CAAC;IAnGQ,eAAe;QAD3B,yEAAU,EAAE;yCAGkB,2DAAI;OAFtB,eAAe,CAoG3B;IAAD,sBAAC;CAAA;AApG2B;;;;;;;;;;;;;;;;;;;;;;;;;ACTe;AACa;AACzB;AAEW;AACJ;AAItC;IAEI,qBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC3B,IAAI,CAAC,GAAG,GAAG,8DAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAI;QACT,IAAM,IAAI,GAAG,oDAAG,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QACzD,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACvC,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAEpE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,eAAe,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAE5G,CAAC;IAED,gCAAU,GAAV,UAAW,KAAa;QACpB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,kBAAkB,GAAG,KAAK,CAAC,CAAC;IACjE,CAAC;IAED,2BAAK,GAAL,UAAM,IAAI,EAAE,QAAe;QAAf,0CAAe;QACvB,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;QAED,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3D,SAAS,CAAC,QAAQ,GAAG,oDAAG,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAEzC,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACzG,CAAC;IAED,4BAAM,GAAN,UAAO,IAAI;QACP,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAM,IAAI,GAAG,oDAAG,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACpC,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACrH,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChC,CAAC;IAED,gCAAU,GAAV,UAAW,GAAG;QACV,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QAEH,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;QAChE,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,GAAG,IAAI,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAE/G,CAAC;IAED,gCAAU,GAAV;QACI,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QAEH,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;QAChE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,GAAG,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAEtG,CAAC;IAGD,iCAAW,GAAX,UAAY,IAAU;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,CAAC;IACL,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAa;QAClB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAED,iCAAW,GAAX;QACI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,8BAAQ,GAAR;QACI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,6BAAO,GAAP;QACI,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAzGQ,WAAW;QADvB,yEAAU,EAAE;yCAGkB,2DAAI;OAFtB,WAAW,CA0GvB;IAAD,kBAAC;CAAA;AA1GuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AACa;AACzB;AAEW;AAGQ;AACL;AAG7C;IAEI,oBAAoB,KAAW,EAAU,WAAwB;QAA7C,UAAK,GAAL,KAAK,CAAM;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC7D,IAAI,CAAC,GAAG,GAAG,8DAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IAEK,2BAAM,GAAZ,UAAa,GAAkB;;;;;;;wBACvB,OAAO,GAAG,IAAI,8DAAO,CAAC;4BACtB,cAAc,EAAE,kBAAkB;4BAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;yBACrC,CAAC,CAAC;wBACC,UAAU,GAAG,IAAI,wEAAU,CAAC;wBAChC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;4BAC1B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;wBACzD,CAAC,CAAC,CAAC;wBACH,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;4BACtB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;wBAChE,CAAC,CAAC,CAAC;wBACc,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,eAAe,GAAG,UAAU,CAAC,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;;wBAAzG,QAAQ,GAAG,SAA8F;wBAC/G,QAAQ,CAAC,SAAS,CAAC,kBAAQ;4BACvB,IAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;4BACrC,IAAI,OAAO,GAAG,KAAK,CAAC;4BACpB,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;gCACnB,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO;oCAC3C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,uBAAa;wCAC7B,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;4CACzC,OAAO,GAAG,IAAI,CAAC;wCACnB,CAAC;oCACL,CAAC,CAAC,CAAC;oCACH,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wCACX,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;oCAC1D,CAAC;gCACL,CAAC,CAAC,CAAC;4BACP,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gCACtC,IAAM,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,GAAG,KAAK,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;gCAClF,MAAM,CAAC,SAAS,CAAC,sBAAY;oCACzB,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;gCACjE,CAAC,CAAC,CAAC;4BACP,CAAC;wBACL,CAAC,CAAC,CAAC;;;;;KACN;IAED,sCAAiB,GAAjB;QACI,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACzF,CAAC;IAED,+BAAU,GAAV,UAAW,EAAE;QACT,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC/F,CAAC;IACD,kCAAa,GAAb,UAAc,GAAG;QACb,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QACH,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrF,CAAC;IAED,8BAAS,GAAT,UAAU,GAAG;QACT,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC;YACtB,cAAc,EAAE,kBAAkB;YAChC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACrC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,6BAAQ,GAAR;QACI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,qCAAgB,GAAhB;QACI,MAAM,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,mCAAc,GAAd;QACI,MAAM,CAAC,CAAC,eAAe,EAAE,qBAAqB,EAAE,QAAQ,EAAE,uBAAuB,CAAC,CAAC;IACvF,CAAC;IArFQ,UAAU;QADtB,yEAAU,EAAE;yCAGkB,2DAAI,EAAuB,kEAAW;OAFxD,UAAU,CAsFtB;IAAD,iBAAC;CAAA;AAtFsB;;;;;;;;;;ACXhB,IAAM,GAAG,GAAG;IACf,GAAG,EAAE,MAAM;CACd,CAAC;;;;;;;;;;;;;;;;;;;;;;ACFyC;AACW;AACJ;AAGlD;IAEI,oBAAoB,OAAe,EAAU,YAAyB;QAAlD,YAAO,GAAP,OAAO,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAEtE,CAAC;IAED,gCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAZQ,UAAU;QADtB,yEAAU,EAAE;yCAGoB,+DAAM,EAAwB,sEAAW;OAF7D,UAAU,CAetB;IAAD,iBAAC;CAAA;AAfsB;;;;;;;;;;;;;;;;;;;;;;ACLoB;AACW;AACJ;AAGlD;IAEI,qBAAoB,OAAe,EAAU,YAAyB;QAAlD,YAAO,GAAP,OAAO,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAEtE,CAAC;IAED,iCAAW,GAAX;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAA,IAAI,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAbQ,WAAW;QADvB,yEAAU,EAAE;yCAGoB,+DAAM,EAAwB,sEAAW;OAF7D,WAAW,CAgBvB;IAAD,kBAAC;CAAA;AAhBuB;;;;;;;;;;;;;;;;;;;;;;ACLmB;AACW;AACJ;AAGlD;IAEI,4BAAoB,OAAe,EAAU,YAAyB;QAAlD,YAAO,GAAP,OAAO,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAa;IAEtE,CAAC;IAED,wCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAbQ,kBAAkB;QAD9B,yEAAU,EAAE;yCAGoB,+DAAM,EAAwB,sEAAW;OAF7D,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA;AAhB8B;;;;;;;;;;;;;;;;;;;;;;;;;ACLkC;AACgB;AAC/B;AAQlD;IACI,iCAAoB,YAAyB,EAAmC,WAAoB;QAAhF,iBAAY,GAAZ,YAAY,CAAa;QAAmC,gBAAW,GAAX,WAAW,CAAS;IACpG,CAAC;gCAFQ,uBAAuB;IAIhC,0CAAQ,GAAR,UAAS,CAAkB;QAA3B,iBAcC;QAbG,MAAM,CAAC,IAAI,OAAO,CAAC,iBAAO;YACtB,YAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACpD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC;wBACrF,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClB,CAAC;oBAAA,IAAI,EAAC;wBACF,OAAO,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;oBACpC,CAAC;gBAEL,CAAC;YACL,CAAC,EAAE,eAAK;gBACJ,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC;QAXF,CAWE,CAAC,CAAC;IACZ,CAAC;IAlBQ,uBAAuB;QANnC,wEAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;YACjC,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,2EAAmB,EAAE,WAAW,EAAE,yBAAuB,EAAE,KAAK,EAAE,IAAI,EAAE;aACtF;SACJ,CAAC;QAEkD,mFAAS,CAAC,aAAa,CAAC;yCAAtC,sEAAW;OADpC,uBAAuB,CAmBnC;IAAD,8BAAC;;CAAA;AAnBmC;;;;;;;;;;;;;;;;;;;;;;;;ACV6B;AACU;AAQ3E;IAEI,wBAAgD,aAAqB,EACpC,OAAe;QADA,kBAAa,GAAb,aAAa,CAAQ;QACpC,YAAO,GAAP,OAAO,CAAQ;IAEhD,CAAC;uBALQ,cAAc;IAOvB,sBAAY,qCAAS;aAArB;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;QAClD,CAAC;;;OAAA;IAED,iCAAQ,GAAR,UAAS,CAAkB;QACvB,aAAa;QACb,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;QAEhB,gBAAgB;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvC,kBAAkB;QAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC;gBACH,aAAa,EAAE,KAAK;aACvB;QACL,CAAC;QAED,0BAA0B;QAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnD,OAAO,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACjC,EAAE,EAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC;QAED,8BAA8B;QAC9B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,SAAS,CAAC;gBACR,aAAa,EAAE,KAAK;aACvB,CAAC;QACN,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAvCQ,cAAc;QAN1B,wEAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,qEAAa,EAAE,WAAW,EAAE,gBAAc,EAAE,KAAK,EAAE,IAAI,EAAE;aACvE;SACJ,CAAC;QAGgB,mFAAS,CAAC,eAAe,CAAC;QACnC,mFAAS,CAAC,SAAS,CAAC;;OAHhB,cAAc,CAwC1B;IAAD,qBAAC;;CAAA;AAxC0B;;;;;;;;;ACT3B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AACvC;AAClB,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//Componentes\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ErrorComponent } from './components/error/error.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { UserDataComponent } from './components/user-data/user-data.component';\r\nimport { StepperComponent } from './components/stepper/stepper.component';\r\nimport { ImageGridComponent } from './components/imagegrid/imagegrid.component';\r\nimport { DatabasesComponent} from './components/databases/databases.component';\r\nimport { LogginGuard } from './services/guards/loggin.guard';\r\nimport { ProtectLogginGuard } from './services/guards/protectLoggin.guard';\r\nimport { QueueDbComponent } from './components/queue-db/queue-db.component';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { AdminGuard } from './services/guards/admin.guard';\r\nimport { QueuedbDetailComponent } from './components/queuedb-detail/queuedb-detail.component';\r\nimport { QueuedbListComponent } from './components/queuedb-list/queuedb-list.component';\r\nimport { VizqueueListComponent } from './components/vizqueue-list/vizqueue-list.component';\r\nimport { VizqueueDetailComponent } from './components/vizqueue-detail/vizqueue-detail.component';\r\nimport { VizViewComponent } from './components/viz-view/viz-view.component';\r\n\r\nconst routes : Routes = [\r\n\r\n  { path: 'login', component: LoginComponent, canActivate: [ProtectLogginGuard]},\r\n  {\r\n    path: 'home', component: HomeComponent,\r\n    canActivate: [LogginGuard], children: [\r\n      { path: '', redirectTo: 'imagegrid', pathMatch: 'full' },\r\n      { path: 'imagegrid', component : ImageGridComponent},\r\n      { path: 'vizView/:id', component: VizViewComponent },\r\n      { path: 'userdata', component: UserDataComponent },\r\n      { path: 'stepper', component: StepperComponent },\r\n      { path: 'databases', component: DatabasesComponent },\r\n      { path: 'queueDB', component: QueueDbComponent },\r\n      { path: 'adminpanel', canActivate: [AdminGuard] , component: AdminPanelComponent, children:\r\n      [\r\n      { path: '', redirectTo: 'queuedblist', pathMatch: 'full' },\r\n      { path: 'queuedblist', component: QueuedbListComponent },\r\n      { path: 'queuedbdetail/:id', component: QueuedbDetailComponent },\r\n      { path: 'vizqueuelist', component: VizqueueListComponent },\r\n      { path: 'vizqueuedetail/:id', component: VizqueueDetailComponent }] }]\r\n  },\r\n  { path: 'register', component: RegisterComponent, canActivate: [ProtectLogginGuard] },\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: '**', component: ErrorComponent}\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  exports: [RouterModule],\r\n  imports: [RouterModule.forRoot(routes)]\r\n})\r\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/app.component.ts","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule, MatCheckboxModule, MatToolbarModule, MatChipsModule, MatOptionModule, MatGridListModule,\r\n   MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatMenuModule, MatDialogModule, MatSnackBarModule,\r\n   MatSelectModule, MatInputModule, MatSidenavModule, MatCardModule, MatIconModule, MatRadioModule, MatProgressSpinnerModule,\r\n   MatTabsModule, MatListModule, MatStepperModule, MatExpansionModule, MatTableModule, MatPaginatorModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule, MatCheckboxModule, MatToolbarModule, MatChipsModule, MatOptionModule, MatGridListModule,\r\n     MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatMenuModule, MatDialogModule, MatSnackBarModule, MatSelectModule,\r\n      MatInputModule, MatSidenavModule, MatCardModule, MatIconModule, MatRadioModule, MatProgressSpinnerModule,\r\n    MatTabsModule, MatListModule, MatStepperModule, MatExpansionModule, MatTableModule, MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule, MatCheckboxModule, MatToolbarModule, MatChipsModule, MatOptionModule, MatGridListModule, MatProgressBarModule,\r\n     MatSliderModule, MatSlideToggleModule, MatMenuModule, MatDialogModule, MatSnackBarModule, MatSelectModule, MatInputModule,\r\n     MatSidenavModule, MatCardModule, MatIconModule, MatRadioModule, MatProgressSpinnerModule, MatTabsModule,\r\n    MatListModule, MatStepperModule, MatExpansionModule, MatTableModule, MatPaginatorModule\r\n  ],\r\n})\r\nexport class AppMaterialModule { }\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/app.material.module.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent} from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { ErrorComponent } from './components/error/error.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EqualValidator } from './services/validator/equal-validate.directive';\r\nimport { UserService } from './services/api/user.service';\r\nimport { LogginGuard } from './services/guards/loggin.guard';\r\nimport { ProtectLogginGuard } from './services/guards/protectLoggin.guard';\r\nimport { EmailValidatorDirective } from './services/validator/emailUniq.directive';\r\nimport { UserDataComponent } from './components/user-data/user-data.component';\r\nimport { StepperComponent } from './components/stepper/stepper.component';\r\nimport { AppMaterialModule } from './app.material.module';\r\nimport { DialogContentComponent } from './components/dialogContent/dialogContent.component';\r\nimport { ImageGridComponent } from './components/imagegrid/imagegrid.component';\r\nimport { DatabaseService } from './services/api/database.service';\r\nimport { DatabasesComponent } from './components/databases/databases.component';\r\nimport { QueueDbComponent } from './components/queue-db/queue-db.component';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { AdminGuard } from './services/guards/admin.guard';\r\nimport { QueuedbDetailComponent } from './components/queuedb-detail/queuedb-detail.component';\r\nimport { QueuedbListComponent } from './components/queuedb-list/queuedb-list.component';\r\nimport { VizqueueDetailComponent } from './components/vizqueue-detail/vizqueue-detail.component';\r\nimport { VizqueueListComponent } from './components/vizqueue-list/vizqueue-list.component';\r\nimport { VizService } from './services/api/viz.service';\nimport { VizViewComponent } from './components/viz-view/viz-view.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ErrorComponent,\r\n    HomeComponent,\r\n    EqualValidator,\r\n    EmailValidatorDirective,\r\n    UserDataComponent,\r\n    StepperComponent,\r\n    DialogContentComponent,\r\n    ImageGridComponent,\r\n    DatabasesComponent,\r\n    QueueDbComponent,\r\n    AdminPanelComponent,\r\n    QueuedbDetailComponent,\r\n    QueuedbListComponent,\r\n    VizqueueDetailComponent,\r\n    VizqueueListComponent,\r\n    VizViewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    AppMaterialModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [UserService, LogginGuard, AdminGuard, ProtectLogginGuard, DatabaseService, VizService],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [DialogContentComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".demo-tab-group {\\r\\n  border: 1px solid #e8e8e8;\\r\\n}\\r\\n\\r\\n.demo-tab-content {\\r\\n  padding: 16px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/admin-panel/admin-panel.component.css\n// module id = ../../../../../src/app/components/admin-panel/admin-panel.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <h2 class=\\\"example-h2\\\">Elementos pendientes de añadir por el administrador</h2>\\n    <nav mat-tab-nav-bar>\\n      <a mat-tab-link [routerLink]=\\\"['queuedblist']\\\">\\n\\n        Bases de datos pendientes\\n      </a>\\n      <a mat-tab-link [routerLink]=\\\"['vizqueuelist']\\\">\\n\\n        Visualizaciones\\n      </a>\\n\\n    </nav>\\n    <router-outlet></router-outlet>\\n\\n  </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/admin-panel/admin-panel.component.html\n// module id = ../../../../../src/app/components/admin-panel/admin-panel.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/admin-panel/admin-panel.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .example-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n\\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n  }\\r\\n\\r\\n  mat-cell,\\r\\n  .mat-header-cell {\\r\\n    overflow: visible;\\r\\n  }\\r\\n\\r\\n.centerText {\\r\\n  color: lightgrey;\\r\\n  text-align: center;\\r\\n  margin-top: 10%;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/databases/databases.component.css\n// module id = ../../../../../src/app/components/databases/databases.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"dataSource; else templateName\\\">\\n  <ng-template matStepLabel>Selecciona las bases de datos</ng-template>\\n  <h2 class=\\\"example-h2\\\">Bases de datos</h2>\\n  <mat-form-field class=\\\"example-form-field\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtro\\\">\\n  </mat-form-field>\\n\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n\\n    <ng-container matColumnDef=\\\"nombre\\\">\\n      <mat-header-cell *matHeaderCellDef> Nombre </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let database\\\"> {{database.nombre}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"descripcion\\\">\\n      <mat-header-cell *matHeaderCellDef> Descripcion </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let database\\\"> {{database.descripcion}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"campos\\\">\\n      <mat-header-cell *matHeaderCellDef> Campos </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let database\\\">\\n        <ul>\\n          <li *ngFor=\\\"let campo of database.campos\\\">\\n            {{campo.nombre}} : {{campo.tipo}}\\n          </li>\\n        </ul>\\n      </mat-cell>\\n\\n    </ng-container>\\n\\n    <!-- Checkbox Column -->\\n    <ng-container *ngIf='isAdmin()' matColumnDef=\\\"borrar\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\" [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n        </mat-checkbox>\\n        <button mat-icon-button (click)='deleteSelected()'>\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n\\n\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\n        </mat-checkbox>\\n      </mat-cell>\\n    </ng-container>\\n\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n  </mat-table>\\n\\n  <button mat-fab class=\\\"app-fab\\\" [routerLink]=\\\"['/home/queueDB']\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\\n\\n<ng-template #templateName>\\n  <mat-spinner></mat-spinner>\\n</ng-template>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/databases/databases.component.html\n// module id = ../../../../../src/app/components/databases/databases.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource, MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Visualization } from '../models/visualization.entity';\nimport { Database, Field } from '../models/database.entity';\nimport { DatabaseService } from '../../services/api/database.service';\nimport { UserService } from '../../services/api/user.service';\n@Component({\n  selector: 'app-databases',\n  templateUrl: './databases.component.html',\n  styleUrls: ['./databases.component.css']\n})\nexport class DatabasesComponent implements OnInit {\n  data: Array<any>;\n  displayedColumns = ['nombre', 'descripcion', 'campos'];\n  dataSource: MatTableDataSource<Database>;\n  selection = new SelectionModel<Database>(true, []);\n\n  resultsLength = 0;\n  constructor(private databaseService: DatabaseService, private userService: UserService, private _dialog: MatDialog) { }\n\n  async ngOnInit() {\n    if (this.isAdmin()) {\n      this.displayedColumns.push('borrar');\n    }\n    const databases = await this.databaseService.getDatabases();\n    databases.subscribe(response => {\n      this.data = response.json();\n      this.resultsLength = this.data.length;\n      this.dataSource = new MatTableDataSource<Database>(this.data);\n    });\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  async deleteSelected() {\n    for (const database of this.selection.selected) {\n      let index: number = this.data.findIndex(d => d === database);\n      this.dataSource.data.splice(index, 1);\n      this.dataSource = new MatTableDataSource<Database>(this.dataSource.data);\n\n      const deletedDB = await this.databaseService.deleteDatabase(database);\n      deletedDB.subscribe();\n    }\n    this.selection.clear();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  isAdmin() {\n    return this.userService.isAdmin();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/databases/databases.component.ts","import { Component, Optional, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n@Component({\r\n    template: `\r\n    <span [style.color]=\"data.color\"><mat-icon>{{data.icon}}</mat-icon>  {{data.status}}</span>\r\n  `,\r\n})\r\nexport class DialogContentComponent {\r\n    constructor( @Inject(MAT_DIALOG_DATA) public data: any, @Optional() public dialogRef: MatDialogRef<DialogContentComponent>) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/dialogContent/dialogContent.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/error/error.component.css\n// module id = ../../../../../src/app/components/error/error.component.css\n// module chunks = main","module.exports = \"\\r\\n<h1 color=\\\"red\\\"> ERROR 404 Page not found! </h1>\\r\\n\\r\\nThe page you are trying to reach does not exist, or has been moved. Please use the menus or the <br>\\r\\nsearch box to find what page are you looking for.\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/error/error.component.html\n// module id = ../../../../../src/app/components/error/error.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/error/error.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.example-sidenav {\\r\\n  -webkit-box-flex: 1;\\r\\n      -ms-flex: 1;\\r\\n          flex: 1;\\r\\n\\r\\n}\\r\\n\\r\\n.app-fab {\\r\\n  position: fixed !important;\\r\\n  bottom: 20px;\\r\\n  right: 20px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <button mat-button class=\\\"app-menu-button\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n      <i class=\\\"material-icons\\\">menu</i>\\r\\n    </button>\\r\\n    <span class=\\\"title\\\">Datavisualizer</span>\\r\\n  </mat-toolbar>\\r\\n  <mat-sidenav-container class=\\\"app-sidenav\\\" color=\\\"primary\\\">\\r\\n\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" layout=\\\"vertical\\\" class=\\\"example-sidenav\\\">\\r\\n      <mat-toolbar>\\r\\n        <mat-toolbar-row>\\r\\n          <a [routerLink]=\\\"['/home/imagegrid']\\\">\\r\\n            <span>Visualizaciones</span>\\r\\n            <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n            <mat-icon class=\\\"example-icon\\\">image</mat-icon>\\r\\n          </a>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n        <mat-toolbar-row>\\r\\n          <a [routerLink]=\\\"['/home/userdata']\\\">\\r\\n            <span>Datos del usuario</span>\\r\\n            <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n            <mat-icon class=\\\"example-icon\\\">account_circle</mat-icon>\\r\\n          </a>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n        <mat-toolbar-row>\\r\\n          <a [routerLink]=\\\"['/home/databases']\\\">\\r\\n            <span>Bases de datos</span>\\r\\n            <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n            <mat-icon class=\\\"example-icon\\\">archive</mat-icon>\\r\\n          </a>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n        <mat-toolbar-row *ngIf='isAdmin()'>\\r\\n          <a [routerLink]=\\\"['/home/adminpanel']\\\">\\r\\n            <span>Panel de administración</span>\\r\\n            <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n            <mat-icon class=\\\"example-icon\\\">settings</mat-icon>\\r\\n          </a>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n\\r\\n        <mat-toolbar-row>\\r\\n          <button mat-raised-button color=\\\"warn\\\" class=\\\"app-sidebar-button\\\" (click)=\\\"logout()\\\">\\r\\n            <mat-icon class=\\\"example-icon\\\">power_settings_new</mat-icon>\\r\\n            Salir\\r\\n          </button>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n\\r\\n      </mat-toolbar>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n      <router-outlet></router-outlet>\\r\\n    </mat-sidenav-content>\\r\\n\\r\\n  </mat-sidenav-container>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/api/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private _userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  logout() {\r\n    this._userService.logout();\r\n    this.router.navigate(['login']);\r\n  }\r\n  isAdmin() {\r\n    return this._userService.isAdmin();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".centerText {\\r\\n  color: lightgrey;\\r\\n  text-align: center;\\r\\n  margin-top: 10%;\\r\\n}\\r\\n\\r\\n.centerTitle {\\r\\n  margin-top: 10%;\\r\\n  margin-left: 5%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  position: relative;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.image {\\r\\n  opacity: 1;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  height: auto;\\r\\n  transition: .5s ease;\\r\\n  -webkit-backface-visibility: hidden;\\r\\n          backface-visibility: hidden;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.middle {\\r\\n  transition: .5s ease;\\r\\n  opacity: 0;\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%, -50%);\\r\\n          transform: translate(-50%, -50%);\\r\\n  -ms-transform: translate(-50%, -50%);\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.container:hover .image {\\r\\n  opacity: 0.3;\\r\\n}\\r\\n\\r\\n.container:hover .middle {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.text {\\r\\n  background-color: grey;\\r\\n  color: whitesmoke;\\r\\n  font-size: 16px;\\r\\n  padding: 16px 32px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/imagegrid/imagegrid.component.css\n// module id = ../../../../../src/app/components/imagegrid/imagegrid.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"loaded; else templateName\\\">\\n\\n  <h1 *ngIf=\\\"!vizs; else noViz\\\" class=' centerText '> No hay Visualizaciones</h1>\\n\\n  <ng-template #noViz>\\n    <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"250px\\\">\\n      <mat-grid-tile *ngFor=\\\"let viz of vizs\\\">\\n        <div class=\\\"container\\\">\\n          <img src={{thumbnail(viz.img)}} class=\\\"image\\\" style=\\\"width:100%\\\">\\n          <div class=\\\"middle\\\">\\n            <button mat-raised-button (click)='ver(viz)' color=\\\"primary\\\">Ver</button>\\n          </div>\\n          <span class=' centerTitle '>{{viz.nombre}}</span>\\n        </div>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </ng-template>\\n\\n  <button mat-fab class=\\\"app-fab\\\" [routerLink]=\\\"['/home/stepper']\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\\n\\n<ng-template #templateName>\\n  <mat-spinner style=\\\"margin: auto;\\\" mode=\\\"indeterminate\\\"></mat-spinner>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/imagegrid/imagegrid.component.html\n// module id = ../../../../../src/app/components/imagegrid/imagegrid.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UserService } from '../../services/api/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-component',\n  templateUrl: './imagegrid.component.html',\n  styleUrls: ['./imagegrid.component.css'],\n})\nexport class ImageGridComponent implements OnInit {\n\n  public loaded: boolean;\n  public vizs;\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() {\n    this.userService.getUserViz().subscribe(response => {\n      this.vizs = response.viz.filter(viz => viz.url);\n      this.loaded = true;\n    });\n\n  }\n\n  thumbnail(img: string){\n    img = img ? img : 'http://www.confidentonline.com/uploads/227057695no%20image.jpg';\n    return img;\n  }\n  ver(viz) {\n    this.router.navigate(['home/vizView/' + viz._id]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/imagegrid/imagegrid.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span class=\\\"title\\\">Datavisualizer</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-card>\\r\\n  <mat-card-content>\\r\\n\\r\\n    <form class=\\\"example-container\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(loginForm)\\\" accept-charset=\\\"UTF-8\\\" role=\\\"form\\\">\\r\\n      <h2 class=\\\"example-h2\\\">Login</h2>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Nombre\\\" type=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"user.email\\\" email\\r\\n          required>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Contraseña\\\" name=\\\"password\\\" type=\\\"password\\\" value=\\\"\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\"\\r\\n          required>\\r\\n        <mat-icon matSuffix>visibility</mat-icon>\\r\\n      </mat-form-field>\\r\\n      <button type='submit' class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.form.valid\\\">Login</button>\\r\\n    </form>\\r\\n\\r\\n  </mat-card-content>\\r\\n    <button class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/register']\\\">Registrate</button>\\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport { User } from '../models/user.entity';\r\nimport { UserService } from '../../services/api/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatDialog, MatDialogRef , MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public user: User;\r\n  public identity: User;\r\n  public token : string;\r\n  constructor(private _userService: UserService,\r\n    private router: Router, private _dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.user = new User( '', '', '', 'ROLE_USER');\r\n  }\r\n\r\n  onSubmit(loginForm){\r\n    this._userService.login(this.user).subscribe(\r\n      response => {\r\n        if (response.user) {\r\n          this.identity = response.user;\r\n          this._userService.setIdentity(this.identity);\r\n          this._userService.login(this.user, 'true').subscribe(\r\n            response => {\r\n              this.token = response.token;\r\n              this._userService.setToken(this.token);\r\n              this.router.navigate(['home']);\r\n            }, error =>{\r\n              console.log(<any>error);\r\n            }\r\n          )\r\n        } else {\r\n          this.user = new User( '', '', '', 'ROLE_USER');\r\n        }\r\n      },\r\n      error => {\r\n        if(error._body){\r\n          let body = JSON.parse(error._body);\r\n          if(body.message){\r\n            this.openDialog(body.message);\r\n          }\r\n        }else{\r\n          console.log(<any>error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(message) {\r\n    let dialogRef = this._dialog.open(DialogContentComponent, {\r\n      data: { status: message , color: \"red\", icon: \"error\"},\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/login/login.component.ts","export class Database {\r\n    _id: string;\r\n    nombre: string;\r\n    descripcion: string;\r\n    campos: Array<Field>;\r\n}\r\n\r\nexport class Field {\r\n    _id: string;\r\n    nombre: string;\r\n    tipo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/models/database.entity.ts","export class QueueDB {\r\n    _id: string;\r\n    nombre: string;\r\n    url: string;\r\n    descripcion: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/models/queueDB.entity.ts","export class User{\r\n    _id: string;\r\n    constructor(\r\n        public name: string,\r\n        public email: string,\r\n        public password: string,\r\n        public role: string,\r\n        public viz?: String[]\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/models/user.entity.ts","export class Visualization {\r\n    nombre: string;\r\n    url: string;\r\n    img: string;\r\n    databases: Array<string>;\r\n    options: Array<Opcion>;\r\n\r\n}\r\n\r\nexport class Opcion {\r\n    nombre: string;\r\n    valor: string;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/models/visualization.entity.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/queue-db/queue-db.component.css\n// module id = ../../../../../src/app/components/queue-db/queue-db.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n  <mat-card-content>\\n\\n    <form class=\\\"example-container\\\" #queueDBForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(queueDBForm)\\\" accept-charset=\\\"UTF-8\\\" role=\\\"form\\\">\\n      <h2 class=\\\"example-h2\\\">Petición para añadir base de datos</h2>\\n      <mat-form-field>\\n        <input matInput class=\\\"form-control\\\" name=\\\"nombre\\\" placeholder=\\\"Nombre\\\" type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"queueDB.nombre\\\"\\n          minlength=\\\"3\\\" required>\\n        <mat-hint align=\\\"end\\\">\\n          {{queueDB.nombre.length}} / min 3\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <textarea matInput placeholder=\\\"Descripción de la base de datos\\\" name='descripcion' #descripcion=\\\"ngModel\\\" [(ngModel)]=\\\"queueDB.descripcion\\\"></textarea>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"url\\\" placeholder=\\\"Url de la base de datos\\\" name=\\\"url\\\" #url=\\\"ngModel\\\" [(ngModel)]=\\\"queueDB.url\\\">\\n        <mat-icon matSuffix>link</mat-icon>\\n      </mat-form-field>\\n      <button type='submit' class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!queueDBForm.form.valid\\\">Crear Petición BD</button>\\n    </form>\\n\\n  </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/queue-db/queue-db.component.html\n// module id = ../../../../../src/app/components/queue-db/queue-db.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { QueueDB } from '../models/queueDB.entity';\nimport { MatDialog } from '@angular/material';\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\nimport { DatabaseService } from '../../services/api/database.service';\nimport { UserService } from '../../services/api/user.service';\n@Component({\n  selector: 'app-queue-db',\n  templateUrl: './queue-db.component.html',\n  styleUrls: ['./queue-db.component.css'],\n})\nexport class QueueDbComponent implements OnInit {\npublic queueDB: QueueDB;\n  constructor(private databaseService: DatabaseService, private _userService: UserService, private _dialog: MatDialog) {\n\n  }\n\n  ngOnInit() {\n    this.queueDB = new QueueDB();\n    this.queueDB.url = '';\n    this.queueDB.descripcion = '';\n    this.queueDB.nombre = '';\n  }\n  \n  async onSubmit(queueDBdataForm) {\n    const result =  await this.databaseService.createQueueDB(this.queueDB);\n    result.subscribe(\n      response => {\n        this.openDialog(\"Petición de base de datos añadida correctamente\", \"green\", \"done\");\n      },\n      error => {\n        this.openDialog(\"Error al modificar los datos\", \"red\", \"error\");\n        console.log(<any>error);\n      }\n    );\n    this.queueDB.url = '';\n    this.queueDB.descripcion = '';\n    this.queueDB.nombre = '';\n    queueDBdataForm.reset({\n      nombre: this.queueDB.nombre, descripcion: this.queueDB.descripcion, url: this.queueDB.url\n    });\n  }\n\n  openDialog(message, color, icon) {\n    let dialogRef = this._dialog.open(DialogContentComponent, {\n      data: { status: message, color: color, icon: icon },\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/queue-db/queue-db.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .example-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/queuedb-detail/queuedb-detail.component.css\n// module id = ../../../../../src/app/components/queuedb-detail/queuedb-detail.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"database; else templateName\\\">\\n\\n  <mat-card>\\n    <mat-card-content>\\n\\n      <form class=\\\"example-container\\\" #databaseForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(databaseForm)\\\" accept-charset=\\\"UTF-8\\\" role=\\\"form\\\">\\n        <h2 class=\\\"example-h2\\\">Añadir base de datos basada en una petición</h2>\\n        <mat-form-field>\\n          <input matInput class=\\\"form-control\\\" name=\\\"nombre\\\" placeholder=\\\"Nombre\\\" type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"database.nombre\\\"\\n            minlength=\\\"3\\\" required>\\n          <mat-hint align=\\\"end\\\">\\n            {{database.nombre.length}} / min 3\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <textarea matInput placeholder=\\\"Descripción de la base de datos\\\" name='descripcion' #descripcion=\\\"ngModel\\\" [(ngModel)]=\\\"database.descripcion\\\"></textarea>\\n        </mat-form-field>\\n        <ul style=\\\"list-style-type:none\\\">\\n\\n          <h2 mat-subheader>Campos\\n            <button type=\\\"button\\\" mat-icon-button (click)='anadirCampo()'>\\n              <mat-icon aria-label=\\\"Añadir campo a la base de datos\\\">add</mat-icon>\\n            </button>\\n          </h2>\\n          <li *ngFor=\\\"let campo of database.campos; index as i\\\">\\n\\n            <h3 mat-subheader> Nombre del campo: {{campo.nombre}} Tipo: {{campo.tipo}}</h3>\\n            <mat-form-field class=\\\"example-form-field\\\">\\n              <input matInput class=\\\"form-control\\\" name=\\\"nombreCampo\\\" placeholder=\\\"Nombre del campo\\\" type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"database.campos[i].nombre\\\"\\n                minlength=\\\"3\\\" required>\\n              <mat-hint align=\\\"end\\\">\\n                {{campo.nombre.length}} / min 3\\n              </mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"example-form-field\\\">\\n\\n              <mat-select [(value)]=\\\"campo.tipo\\\" placeholder=\\\"Tipo de campo\\\" required>\\n                <mat-option *ngFor=\\\"let tipo of tiposCampos\\\" [value]=\\\"tipo\\\">\\n                  {{tipo}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <mat-divider></mat-divider>\\n\\n          </li>\\n\\n        </ul>\\n        <button type='submit' class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!databaseForm.form.valid\\\">Crear base de datos</button>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\\n\\n<ng-template #templateName>\\n  <mat-spinner></mat-spinner>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/queuedb-detail/queuedb-detail.component.html\n// module id = ../../../../../src/app/components/queuedb-detail/queuedb-detail.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { QueueDB } from '../models/queueDB.entity';\nimport { DatabaseService } from '../../services/api/database.service';\nimport { Database } from '../models/database.entity';\nimport { MatDialog } from '@angular/material';\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\nimport { Field } from '../models/database.entity';\n@Component({\n  selector: 'app-queuedb-detail',\n  templateUrl: './queuedb-detail.component.html',\n  styleUrls: ['./queuedb-detail.component.css']\n})\nexport class QueuedbDetailComponent implements OnInit {\n\n  public database: Database;\n  public queueDB: QueueDB;\n  public tiposCampos;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private databaseService: DatabaseService,\n    private _dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.database = new Database();\n    this.database.nombre = '';\n    this.database.descripcion = '';\n    this.database.campos = new Array<Field>();\n    this.databaseService.getQueueDatabase(id).subscribe(response => {\n      this.queueDB = response.json();\n      this.database.nombre = this.queueDB.nombre;\n      this.database.descripcion = this.queueDB.descripcion;\n    });\n    this.tiposCampos = this.databaseService.tiposCampos();\n  }\n\n  anadirCampo() {\n    let field = new Field();\n    field.nombre = '';\n    field.tipo = '';\n    this.database.campos.push(field);\n  }\n  async onSubmit(databaseForm) {\n\n    const result = await this.databaseService.createDatabase(this.database);\n    result.subscribe(\n      async response => {\n        const resultDelete = await this.databaseService.deleteQueueDB(this.queueDB);\n        resultDelete.subscribe(responseDelete =>{\n          this.openDialog(\"Petición de base de datos añadida correctamente\", \"green\", \"done\");\n          this.router.navigate(['home/adminpanel/queuedblist']);\n        });\n      },\n      error => {\n        this.openDialog(\"Error al modificar los datos\", \"red\", \"error\");\n        console.log(<any>error);\n      }\n    );\n  }\n\n  openDialog(message, color, icon) {\n    let dialogRef = this._dialog.open(DialogContentComponent, {\n      data: { status: message, color: color, icon: icon },\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/queuedb-detail/queuedb-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .example-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n  }\\r\\n\\r\\n  mat-cell,\\r\\n  .mat-header-cell {\\r\\n    overflow: visible;\\r\\n  }\\r\\n\\r\\n  .centerText {\\r\\n    color: lightgrey;\\r\\n    text-align: center;\\r\\n    margin-top: 10%;\\r\\n  }\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/queuedb-list/queuedb-list.component.css\n// module id = ../../../../../src/app/components/queuedb-list/queuedb-list.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"dataSource; else templateName\\\">\\n\\n\\n<br>\\n<mat-form-field class=\\\"example-form-field\\\">\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtro\\\">\\n</mat-form-field>\\n\\n<mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n\\n  <ng-container matColumnDef=\\\"nombre\\\">\\n    <mat-header-cell *matHeaderCellDef> Nombre </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let database\\\"> {{database.nombre}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"descripcion\\\">\\n    <mat-header-cell *matHeaderCellDef> Descripcion </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let database\\\"> {{database.descripcion}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Checkbox Column -->\\n  <ng-container matColumnDef=\\\"editar\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Añadir la base de datos\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row\\\">\\n      <button (click)=\\\"editar(row)\\\" mat-button color=\\\"primary\\\">Añadir</button>\\n    </mat-cell>\\n  </ng-container>\\n\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n</mat-table>\\n</div>\\n\\n<ng-template #templateName>\\n  <mat-spinner></mat-spinner>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/queuedb-list/queuedb-list.component.html\n// module id = ../../../../../src/app/components/queuedb-list/queuedb-list.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatTableDataSource, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Visualization} from '../models/visualization.entity';\nimport { DatabaseService } from '../../services/api/database.service';\nimport { QueueDB } from '../models/queueDB.entity';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-queuedb-list',\n  templateUrl: './queuedb-list.component.html',\n  styleUrls: ['./queuedb-list.component.css']\n})\nexport class QueuedbListComponent implements OnInit {\n\n  data: Array<any>;\n  displayedColumns = ['nombre', 'descripcion', 'editar'];\n  dataSource: MatTableDataSource<QueueDB>;\n  selection = new SelectionModel<QueueDB>(true, []);\n\n  constructor(private databaseService: DatabaseService, private route: Router) { }\n\n  async ngOnInit() {\n    const databases = await this.databaseService.getQueueDatabases();\n    databases.subscribe(response => {\n      this.data = response.json();\n      this.dataSource = new MatTableDataSource<QueueDB>(this.data);\n    });\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  editar(queueDB) {\n    this.route.navigate(['home/adminpanel/queuedbdetail/' + queueDB._id]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/queuedb-list/queuedb-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span class=\\\"title\\\">Datavisualizer</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-card>\\r\\n  <mat-card-content>\\r\\n\\r\\n    <form class=\\\"example-container\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(registerForm)\\\" accept-charset=\\\"UTF-8\\\" role=\\\"form\\\">\\r\\n      <h2 class=\\\"example-h2\\\">Registro de usuario</h2>\\r\\n      <mat-form-field>\\r\\n        <input matInput class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Nombre\\\" type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"user.name\\\"\\r\\n          minlength=\\\"3\\\" required>\\r\\n        <mat-icon matSuffix>person</mat-icon>\\r\\n        <mat-hint align=\\\"end\\\">\\r\\n          {{user.name.length}} / min 3\\r\\n        </mat-hint>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"user.email\\\" email required asyncEmailValidator>\\r\\n        <mat-icon matSuffix>mail</mat-icon>\\r\\n        <mat-hint *ngIf=\\\"email.errors?.asyncInvalid\\\" align=\\\"end\\\">\\r\\n          <span style=\\\"color:red\\\"> El email ya esta registrado </span>\\r\\n        </mat-hint>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Contraseña\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\"\\r\\n          required validateEqual=\\\"confirmPass\\\" reverse=\\\"true\\\">\\r\\n        <mat-icon matSuffix>visibility</mat-icon>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Repita la contraseña\\\" name=\\\"confirmPass\\\" type=\\\"password\\\" #confirmPass=\\\"ngModel\\\" [(ngModel)]=\\\"confirmPassword\\\"\\r\\n          validateEqual=\\\"password\\\" reverse=\\\"false\\\" required>\\r\\n        <mat-icon matSuffix>visibility</mat-icon>\\r\\n      </mat-form-field>\\r\\n      <button type='submit' class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!registerForm.form.valid\\\">Registrarse</button>\\r\\n    </form>\\r\\n\\r\\n  </mat-card-content>\\r\\n  <button class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/login']\\\">Volver al login</button>\\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { EmailValidator, Validators } from '@angular/forms';\r\nimport { User } from '../models/user.entity';\r\nimport { UserService } from '../../services/api/user.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public user: User;\r\n  public confirmPassword: String;\r\n  constructor(private _userService: UserService, private _dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.user = new User( '', '', '', 'ROLE_USER');\r\n    this.confirmPassword = '';\r\n  }\r\n  onSubmit(registerForm){\r\n    this._userService.register(this.user).subscribe(\r\n      response => {\r\n        if(response.user){\r\n          this.openDialog(\"La cuenta se ha creado correctamente\", \"green\", \"done\");\r\n          registerForm.reset();\r\n          this.user = new User( '', '', '', 'ROLE_USER');\r\n        }else{\r\n          this.openDialog(\"Error al crear la cuenta\", \"red\", \"error\");\r\n        }\r\n      },\r\n      error => {\r\n        console.log(<any> error);\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(message, color, icon) {\r\n    let dialogRef = this._dialog.open(DialogContentComponent, {\r\n      data: { status: message, color: color , icon : icon},\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .example-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n  }\\r\\n\\r\\n  mat-cell,\\r\\n  .mat-header-cell {\\r\\n    overflow: visible;\\r\\n  }\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/stepper/stepper.component.css\n// module id = ../../../../../src/app/components/stepper/stepper.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"example-h2\\\">Añadir visualización</h1>\\r\\n<mat-vertical-stepper #stepper linear>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Selecciona las bases de datos</ng-template>\\r\\n    <h2 class=\\\"example-h2\\\">Bases de datos</h2>\\r\\n    <div *ngIf=\\\"dataSource; else templateName\\\">\\r\\n\\r\\n\\r\\n      <mat-form-field class=\\\"example-form-field\\\">\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtro\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"nombre\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Nombre </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let database\\\"> {{database.nombre}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"descripcion\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Descripcion </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let database\\\"> {{database.descripcion}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"campos\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Campos </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let database\\\">\\r\\n            <ul>\\r\\n              <li *ngFor=\\\"let campo of database.campos\\\">\\r\\n                {{campo.nombre}} : {{campo.tipo}}\\r\\n              </li>\\r\\n            </ul>\\r\\n          </mat-cell>\\r\\n\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Checkbox Column -->\\r\\n        <ng-container matColumnDef=\\\"select\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>\\r\\n            <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\" [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n            </mat-checkbox>\\r\\n          </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let row\\\">\\r\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\r\\n            </mat-checkbox>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n      </mat-table>\\r\\n    </div>\\r\\n    <ng-template #templateName>\\r\\n      <mat-spinner></mat-spinner>\\r\\n    </ng-template>\\r\\n    <div>\\r\\n      <button mat-raised-button color=\\\"primary\\\" mat-button (click)=\\\"firstStepCheck(stepper)\\\">Siguiente</button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Seleciona parametros de preprocesamiento</ng-template>\\r\\n    <h2 class=\\\"example-h2\\\">Preprocesamiento</h2>\\r\\n    <form [formGroup]=\\\"preprocesamientoForm\\\">\\r\\n      <div formArrayName=\\\"itemRows\\\">\\r\\n        <div *ngFor=\\\"let row of itemRows.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n          <h4>{{this.selection.selected[i].nombre}}</h4>\\r\\n          <span class=\\\"form-group\\\">\\r\\n            <mat-checkbox class=\\\"example-form-field\\\" formControlName=\\\"nulos\\\">Eliminar filas con valores nulos </mat-checkbox>\\r\\n            <div *ngIf=\\\"preprocesamientoForm.controls.itemRows.controls.length > 1\\\">\\r\\n              <mat-form-field class=\\\"example-form-field\\\">\\r\\n                <mat-select placeholder=\\\"Campos union entre bases de datos\\\" formControlName='join' multiple>\\r\\n                  <mat-option *ngFor=\\\"let field of this.selection.selected[i].campos\\\" value='{{field.nombre}}'>\\r\\n                    {{field.nombre}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)='backSecondStep()' mat-button matStepperPrevious>Atras</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" mat-button (click)=\\\"secondStepCheck(stepper)\\\">Siguiente</button>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Parametros de Clustering</ng-template>\\r\\n    <form [formGroup]=\\\"algoritmoForm\\\">\\r\\n      <h2 class=\\\"example-h2\\\">Parametros de Clustering</h2>\\r\\n      <br>\\r\\n      <h3 class=\\\"example-h2\\\">Algoritmo de Clustering</h3>\\r\\n      <br>\\r\\n      <mat-radio-group formControlName=\\\"algoritmo\\\">\\r\\n        <mat-radio-button *ngFor=\\\"let algoritmoCluster of algoritmosClusters\\\" [value]=\\\"algoritmoCluster\\\">\\r\\n          {{algoritmoCluster}}\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n      <br>\\r\\n      <h3 class=\\\"example-h2\\\">Algoritmo testing</h3>\\r\\n      <mat-form-field class=\\\"example-form-field\\\">\\r\\n        <mat-select placeholder=\\\"Algoritmos para testear los clusters\\\" formControlName=\\\"algoritmosTest\\\" multiple>\\r\\n          <mat-option *ngFor=\\\"let algoritmoTest of algoritmosTest\\\" [value]=\\\"algoritmoTest\\\">{{algoritmoTest}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <h3 class=\\\"example-h2\\\">Campos por los que agrupar/generar clusters</h3>\\r\\n      <div formArrayName=\\\"claseCluster\\\">\\r\\n        <div *ngFor=\\\"let row of claseCluster.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n          <h4>{{this.selection.selected[i].nombre}}</h4>\\r\\n          <span class=\\\"form-group\\\">\\r\\n            <mat-form-field class=\\\"example-form-field\\\">\\r\\n              <mat-select placeholder=\\\"Campos union entre bases de datos\\\" formControlName='cluster' multiple>\\r\\n                <mat-option *ngFor=\\\"let field of numberField(this.selection.selected[i].campos)\\\" value='{{field.nombre}}'>\\r\\n                  {{field.nombre}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h3 class=\\\"example-h2\\\">Nombre de la visualización</h3>\\r\\n      <br>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"example-form-field\\\">\\r\\n        <input matInput formControlName=\\\"nombre\\\" placeholder=\\\"Nombre visualización\\\">\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <mat-divider></mat-divider>\\r\\n    </form>\\r\\n    <br>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n\\r\\n    <div>\\r\\n      <br>\\r\\n      <button mat-raised-button color=\\\"warn\\\" mat-button (click)='backThirdStep' matStepperPrevious>Atras</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" mat-button (click)='finalizar()'>Finalizar</button>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n</mat-vertical-stepper>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/stepper/stepper.component.html\n// module id = ../../../../../src/app/components/stepper/stepper.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatStepper, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Visualization, Opcion } from '../models/visualization.entity';\nimport { Database, Field } from '../models/database.entity';\nimport { DatabaseService } from '../../services/api/database.service';\nimport { VizService } from '../../services/api/viz.service';\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.css'],\n})\nexport class StepperComponent implements OnInit {\n  displayedColumns = ['nombre', 'descripcion', 'campos', 'select'];\n  dataSource: MatTableDataSource<Database>;\n  selection = new SelectionModel<Database>(true, []);\n  visualization = new Visualization();\n  algoritmosClusters;\n  algoritmosTest;\n  preprocesamientoForm: FormGroup;\n  algoritmoForm: FormGroup;\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  constructor(private databaseService: DatabaseService, private vizService: VizService, private _dialog: MatDialog, private fb: FormBuilder, private router: Router) {\n    this.createForm();\n  }\n\n  async ngOnInit() {\n    const databases = await this.databaseService.getDatabases();\n    databases.subscribe(response => {\n      this.dataSource = new MatTableDataSource<Database>(response.json());\n    });\n    this.algoritmosClusters = this.vizService.algoritmosKmeans();\n    this.algoritmosTest = this.vizService.algoritmosTest();\n  }\n\n  createForm() {\n    this.preprocesamientoForm = this.fb.group({\n      itemRows: this.fb.array([])\n    });\n    this.algoritmoForm = this.fb.group({\n      nombre: '',\n      algoritmo: '',\n      claseCluster: this.fb.array([]),\n      algoritmosTest: ['']\n    });\n  }\n\n  initPreproRows(name) {\n    return this.fb.group({\n      database: name,\n      nulos: '',\n      join: ''\n    });\n  }\n  initCluserRows(name) {\n    return this.fb.group({\n      database: name,\n      cluster: ''\n    });\n  }\n  get itemRows(): FormArray {\n    return this.preprocesamientoForm.get('itemRows') as FormArray;\n  }\n\n  get claseCluster(): FormArray {\n    return this.algoritmoForm.get('claseCluster') as FormArray;\n  }\n\n  setPreprocess(arraySelect) {\n    const selectedFGs = new Array<FormGroup>();\n    for (let index = 0; index < arraySelect.length; index++) {\n      selectedFGs.push(this.initPreproRows(arraySelect[index].nombre));\n    }\n    const selectedFormArray = this.fb.array(selectedFGs);\n    this.preprocesamientoForm.setControl('itemRows', selectedFormArray);\n  }\n\n  clearPreproArray() {\n    const control = <FormArray>this.preprocesamientoForm.controls['itemRows'];\n\n    control.controls.splice(0);\n  }\n\n  clearClusterArray() {\n    const control = <FormArray>this.preprocesamientoForm.controls['claseCluster'];\n\n    control.controls.splice(0);\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  classField(fields: Array<Field>) {\n    return fields.filter(field => field.tipo === 'Clase');\n  }\n\n  numberField(fields: Array<Field>) {\n    return fields.filter(field => field.tipo === 'Númerico');\n  }\n\n  firstStepCheck(stepper: MatStepper) {\n    if (this.selection.selected.length > 0) {\n      this.clearPreproArray();\n      this.setPreprocess(this.selection.selected);\n      stepper.next();\n    } else {\n      this.openDialog(\"No has seleccionado ninguna base de datos\", \"red\", \"error\");\n    }\n  }\n\n  backSecondStep() {\n    this.clearPreproArray();\n  }\n\n  backThirdStep() {\n    this.clearClusterArray();\n  }\n\n  secondStepCheck(stepper: MatStepper) {\n    let correctStep = true;\n    //Si existe más de un elemento hay que definir elegir elegir al menos una columna por el que se hace join\n    if (this.selection.selected.length > 1) {\n      this.preprocesamientoForm.get('itemRows').value.forEach(element => {\n        if (element.join.length <= 0) {\n          correctStep = false;\n        }\n      });\n    }\n    if (correctStep) {\n      stepper.next();\n    } else {\n      this.openDialog(\"Se debe de seleccionar un campo en JOIN para todas las bases de datos\", \"red\", \"error\");\n    }\n\n    const selectedFGs = new Array<FormGroup>();\n    for (let index = 0; index < this.selection.selected.length; index++) {\n      selectedFGs.push(this.initCluserRows(this.selection.selected[index].nombre));\n    }\n    const selectedFormArray = this.fb.array(selectedFGs);\n    this.algoritmoForm.setControl('claseCluster', selectedFormArray);\n  }\n\n  finalizar() {\n    const viz = new Visualization();\n    viz.nombre = '';\n    viz.url = '';\n    viz.img = '';\n    viz.databases = new Array<string>();\n    this.selection.selected.forEach(database => {\n      viz.databases.push(database._id);\n    });\n    viz.options = new Array<Opcion>();\n    //Parseamos a opciones el preprocesamiento\n\n    const opcionPrepro = new Opcion();\n    opcionPrepro.nombre = 'preprocesamiento';\n    opcionPrepro.valor = JSON.stringify(this.preprocesamientoForm.value.itemRows);\n    viz.options.push(opcionPrepro);\n\n    const clustering = this.algoritmoForm.value;\n    if (clustering.nombre) {\n      viz.nombre = clustering.nombre;\n      if (clustering.algoritmo !== '') {\n        //Parseamos algoritmo\n        const opcionAlgoritmo = new Opcion();\n        opcionAlgoritmo.nombre = 'algoritmo';\n        opcionAlgoritmo.valor = clustering.algoritmo;\n        viz.options.push(opcionAlgoritmo);\n\n        let correctStep = true;\n        clustering.claseCluster.forEach(element => {\n          if (element.cluster.length <= 0) {\n            correctStep = false;\n          }\n        });\n        if (correctStep) {\n          //Parseo clustering\n          const opcionClusters = new Opcion();\n          opcionClusters.nombre = 'clusters';\n          opcionClusters.valor = JSON.stringify(clustering.claseCluster);\n          viz.options.push(opcionClusters);\n          if (clustering.algoritmosTest.length > 0) {\n            //Parseo algoritmos test\n            const opcionTest = new Opcion();\n            opcionTest.nombre = 'algoritmosTest';\n            opcionTest.valor = JSON.stringify(clustering.algoritmosTest);\n            viz.options.push(opcionTest);\n\n            const vizAdded = this.vizService.addViz(viz);\n            this.openDialog(\"Visualización añadida correctamente\", \"green\", \"done\");\n            this.router.navigate(['home/imagegrid']);\n          } else {\n            this.openDialog(\"Selecciona al menos un algoritmo con el que testear los clusters\", \"red\", \"error\");\n          }\n        } else {\n          this.openDialog(\"Selecciona al menos un campo por el que agrupar\", \"red\", \"error\");\n        }\n      } else {\n        this.openDialog(\"Selecciona un algoritmo de procesamiento\", \"red\", \"error\");\n      }\n    } else {\n      this.openDialog(\"La visualización tiene que tener un nombre\", \"red\", \"error\");\n    }\n\n  }\n\n  openDialog(message, color, icon) {\n    let dialogRef = this._dialog.open(DialogContentComponent, {\n      data: { status: message, color: color, icon: icon },\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/stepper/stepper.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/user-data/user-data.component.css\n// module id = ../../../../../src/app/components/user-data/user-data.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n  <mat-card-content>\\n\\n    <form class=\\\"example-container\\\" #userdataForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userdataForm)\\\" accept-charset=\\\"UTF-8\\\" role=\\\"form\\\">\\n      <h2 class=\\\"example-h2\\\">Registro de usuario</h2>\\n      <mat-form-field>\\n        <input matInput class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Nombre\\\" type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"user.name\\\"\\n          minlength=\\\"3\\\" required>\\n        <mat-icon matSuffix>person</mat-icon>\\n        <mat-hint align=\\\"end\\\">\\n          {{user.name.length}} / min 3\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"user.email\\\" email required asyncEmailValidator actualEmail=true>\\n        <mat-icon matSuffix>mail</mat-icon>\\n        <mat-hint *ngIf=\\\"email.errors?.asyncInvalid\\\" align=\\\"end\\\">\\n          <span style=\\\"color:red\\\"> El email ya esta registrado </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Contraseña\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\"\\n           validateEqual=\\\"confirmPass\\\" reverse=\\\"true\\\">\\n        <mat-icon matSuffix>visibility</mat-icon>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Repita la contraseña\\\" name=\\\"confirmPass\\\" type=\\\"password\\\" #confirmPass=\\\"ngModel\\\" [(ngModel)]=\\\"confirmPassword\\\"\\n          validateEqual=\\\"password\\\" reverse=\\\"false\\\">\\n        <mat-icon matSuffix>visibility</mat-icon>\\n      </mat-form-field>\\n      <button type='submit' class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!userdataForm.form.valid\\\">Modificar Datos</button>\\n    </form>\\n\\n  </mat-card-content>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/user-data/user-data.component.html\n// module id = ../../../../../src/app/components/user-data/user-data.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/api/user.service';\nimport { EmailValidator, Validators } from '@angular/forms';\nimport { User } from '../models/user.entity';\nimport { MatDialog } from '@angular/material';\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.component.html',\n  styleUrls: ['./user-data.component.css']\n})\nexport class UserDataComponent implements OnInit {\n  public user: User;\n  public confirmPassword: string;\n  constructor(private _userService: UserService, private _dialog: MatDialog) { \n  }\n\n  ngOnInit() {\n    let identity = JSON.parse(this._userService.getIdentity());\n    this.user = new User(identity.name, identity.email, identity.password, identity.role);\n    this.user.password = '';\n    this.confirmPassword = '';\n  }\n\n  onSubmit(userdataForm){\n    this._userService.update(this.user).subscribe(\n      response => {\n        if(response.token){\n          this._userService.setIdentity(this.user);\n          this._userService.setToken(response.token);\n          this.openDialog(\"Los datos se han modificado correctamente\", \"green\", \"done\");\n        }else{\n          this.openDialog(\"No se han podido modificar los datos correcamente\", \"red\", \"error\");\n        }\n      },\n      error => {\n        this.openDialog(\"Error al modificar los datos\", \"red\", \"error\");\n        console.log(<any>error);\n      }\n    );\n    this.user.password = '';\n    this.confirmPassword = '';\n    userdataForm.reset({name : this.user.name, email: this.user.email, password: this.user.password,\n      confirmPass: this.confirmPassword});\n  }\n\n  openDialog(message, color, icon) {\n    let dialogRef = this._dialog.open(DialogContentComponent, {\n      data: { status: message, color: color, icon: icon },\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/user-data/user-data.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/viz-view/viz-view.component.css\n// module id = ../../../../../src/app/components/viz-view/viz-view.component.css\n// module chunks = main","module.exports = \"<div style='height: 100%, width: 100%;'id=\\\"tableauViz\\\"></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/viz-view/viz-view.component.html\n// module id = ../../../../../src/app/components/viz-view/viz-view.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { VizService } from '../../services/api/viz.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Visualization } from '../models/visualization.entity';\n\n// need to call this var tablau\n// because it is referencing the tableau js library\ndeclare var tableau: any;\n\n@Component({\n  selector: 'app-viz-view',\n  templateUrl: './viz-view.component.html',\n  styleUrls: ['./viz-view.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class VizViewComponent implements OnInit {\n  // now declare an instance var\n  tableauViz: any;\n  viz: Visualization;\n  constructor(private vizService: VizService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.vizService.getVizById(id).subscribe(response => {\n      this.viz = response;\n      const placeholderDiv = document.getElementById('tableauViz');\n      const url = this.viz.url;\n      const options = {\n        hideTabs: true,\n        onFirstInteractive: function () {\n          // The viz is now ready and can be safely used.\n        }\n      };\n      this.tableauViz = new tableau.Viz(placeholderDiv, url, options);\n      // Create a viz object and embed it in the container div.\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/viz-view/viz-view.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/vizqueue-detail/vizqueue-detail.component.css\n// module id = ../../../../../src/app/components/vizqueue-detail/vizqueue-detail.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"vizInfo; else templateName\\\">\\n\\n\\n  <mat-card>\\n    <mat-card-content>\\n\\n      <form class=\\\"example-container\\\" #vizqueueForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(vizqueueForm)\\\" accept-charset=\\\"UTF-8\\\" role=\\\"form\\\">\\n        <h2 class=\\\"example-h2\\\">Editar visualización url o thumbnail</h2>\\n        <mat-form-field>\\n          <input matInput class=\\\"form-control\\\" name=\\\"nombre\\\" placeholder=\\\"Nombre\\\" type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"viz.nombre\\\"\\n            minlength=\\\"3\\\" required>\\n          <mat-hint align=\\\"end\\\">\\n            {{viz.nombre.length}} / min 3\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput type=\\\"url\\\" placeholder=\\\"Url de inscrustación de Tableau\\\" name=\\\"url\\\" #url=\\\"ngModel\\\" [(ngModel)]=\\\"viz.url\\\">\\n          <mat-icon matSuffix>link</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput type=\\\"url\\\" placeholder=\\\"Url del thumbnail\\\" name=\\\"img\\\" #img=\\\"ngModel\\\" [(ngModel)]=\\\"viz.img\\\">\\n          <mat-icon matSuffix>image</mat-icon>\\n        </mat-form-field>\\n        <h3 class=\\\"example-h2\\\">Información de la Viz</h3>\\n        <ul style=\\\"list-style-type:none\\\">\\n          <li>Algoritmo: {{vizInfo.algoritmo}}</li>\\n          <li>Bases de datos:\\n            <ul>\\n              <li *ngFor=\\\"let databases of viz.databases\\\">\\n                {{databases.nombre}}\\n              </li>\\n            </ul>\\n          </li>\\n          <li> Campos Clustering\\n            <ul>\\n              <li *ngFor=\\\"let cluster of vizInfo.clusters\\\">\\n                <pre>{{cluster.database}}: {{cluster.cluster}} </pre>\\n              </li>\\n            </ul>\\n          </li>\\n          <li>Algoritmos para testear los clusters:\\n            <ul>\\n              <li *ngFor=\\\"let test of vizInfo.algoritmosTest\\\">\\n                {{test}}\\n              </li>\\n            </ul>\\n          </li>\\n          <li>Preprocesamiento:\\n            <ul style=\\\"list-style-type:square\\\">\\n              <li *ngFor=\\\"let preprocesamiento of vizInfo.preprocesamiento\\\">\\n                <pre>{{preprocesamiento | json}}</pre>\\n              </li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <button type='submit' class=\\\"app-button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!vizqueueForm.form.valid\\\">Editar visualización</button>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\\n\\n<ng-template #templateName>\\n  <mat-spinner></mat-spinner>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/vizqueue-detail/vizqueue-detail.component.html\n// module id = ../../../../../src/app/components/vizqueue-detail/vizqueue-detail.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MatDialog } from '@angular/material';\nimport { DialogContentComponent } from '../dialogContent/dialogContent.component';\nimport { VizService } from '../../services/api/viz.service';\nimport { Visualization, Opcion } from '../models/visualization.entity';\nimport { Database } from '../models/database.entity';\n@Component({\n  selector: 'app-vizqueue-detail',\n  templateUrl: './vizqueue-detail.component.html',\n  styleUrls: ['./vizqueue-detail.component.css']\n})\nexport class VizqueueDetailComponent implements OnInit {\n\n  public viz: Visualization;\n  public vizInfo;\n  public tiposCampos;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private vizService: VizService,\n    private _dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.viz = new Visualization();\n    this.viz.nombre = '';\n    this.viz.url = '';\n    this.viz.img = '';\n    this.viz.databases = new Array<any>();\n    this.viz.options = new Array<Opcion>();\n    this.vizInfo = new Object();\n    this.vizService.getVizById(id).subscribe(response => {\n      this.viz = response;\n      this.viz.options.forEach(opcion => {\n        try {\n          this.vizInfo[opcion.nombre] = JSON.parse(opcion.valor);\n        } catch (error) {\n          this.vizInfo[opcion.nombre] = opcion.valor;\n        }\n      });\n    });\n  }\n\n  async onSubmit(vizqueueForm) {\n    const result = this.vizService.updateVizById(this.viz);\n    result.subscribe(\n      async response => {\n        this.openDialog(\"Petición de base de datos añadida correctamente\", \"green\", \"done\");\n        this.router.navigate(['home/adminpanel/vizqueuelist']);\n      },\n      error => {\n        this.openDialog(\"Error al modificar los datos\", \"red\", \"error\");\n        console.log(<any>error);\n      }\n    );\n  }\n\n  openDialog(message, color, icon) {\n    let dialogRef = this._dialog.open(DialogContentComponent, {\n      data: { status: message, color: color, icon: icon },\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/vizqueue-detail/vizqueue-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .example-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n  }\\r\\n\\r\\n  mat-cell,\\r\\n  .mat-header-cell {\\r\\n    overflow: visible;\\r\\n  }\\r\\n\\r\\n  .centerText {\\r\\n    color: lightgrey;\\r\\n    text-align: center;\\r\\n    margin-top: 10%;\\r\\n  }\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/vizqueue-list/vizqueue-list.component.css\n// module id = ../../../../../src/app/components/vizqueue-list/vizqueue-list.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"dataSource; else templateName\\\">\\n\\n\\n  <br>\\n  <mat-form-field class=\\\"example-form-field\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtro\\\">\\n  </mat-form-field>\\n\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n\\n    <ng-container matColumnDef=\\\"nombre\\\">\\n      <mat-header-cell *matHeaderCellDef> Nombre </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let viz\\\"> {{viz.nombre}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"url\\\">\\n      <mat-header-cell *matHeaderCellDef> Url </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let viz\\\">\\n        <span *ngIf=\\\"viz.url; else templateUrl\\\">\\n          <mat-icon>done</mat-icon>\\n        </span>\\n        <ng-template #templateUrl>\\n          <mat-icon>clear</mat-icon>\\n        </ng-template>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"algoritmo\\\">\\n      <mat-header-cell *matHeaderCellDef> Algoritmo de procesamiento </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let viz\\\"> {{viz.algoritmo}} </mat-cell>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"cluster\\\">\\n      <mat-header-cell *matHeaderCellDef> Campos clustering </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let viz\\\">\\n        <ul>\\n          <li *ngFor=\\\"let cluster of viz.clusters\\\">\\n            <pre>{{cluster.database}}: {{cluster.cluster}} </pre>\\n          </li>\\n        </ul>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"databases\\\">\\n      <mat-header-cell *matHeaderCellDef> Bases de datos </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let viz\\\">\\n        <ul>\\n          <li *ngFor=\\\"let databases of viz.databases\\\">\\n            {{databases.nombre}}\\n          </li>\\n        </ul>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"editar\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        Añadir la base de datos\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button (click)=\\\"editar(row)\\\" mat-button color=\\\"primary\\\">Editar</button>\\n        <button mat-icon-button (click)='delete(row)'>\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n  </mat-table>\\n</div>\\n\\n<ng-template #templateName>\\n  <mat-spinner></mat-spinner>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/projects/datavisualizer-fronted/src/app/components/vizqueue-list/vizqueue-list.component.html\n// module id = ../../../../../src/app/components/vizqueue-list/vizqueue-list.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatTableDataSource, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Visualization } from '../models/visualization.entity';\nimport { DatabaseService } from '../../services/api/database.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VizService } from '../../services/api/viz.service';\n@Component({\n  selector: 'app-vizqueue-list',\n  templateUrl: './vizqueue-list.component.html',\n  styleUrls: ['./vizqueue-list.component.css']\n})\nexport class VizqueueListComponent implements OnInit {\n\n  data: Array<any>;\n  displayedColumns = ['nombre', 'url', 'algoritmo', 'cluster', 'databases', 'editar'];\n  dataSource: MatTableDataSource<Visualization>;\n  selection = new SelectionModel<Visualization>(true, []);\n\n  constructor(private vizService: VizService, private route: Router) { }\n\n  async ngOnInit() {\n    const visualizations = this.vizService.getVisualizations();\n    this.data = new Array<any>();\n    visualizations.subscribe(response => {\n      response.forEach(element => {\n        element.options.forEach(opcion => {\n          try {\n            element[opcion.nombre] = JSON.parse(opcion.valor);\n          } catch (error) {\n            element[opcion.nombre] = opcion.valor;\n          }\n        });\n        this.data.push(element);\n      });\n      this.dataSource = new MatTableDataSource<Visualization>(this.data);\n    });\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  async delete(viz) {\n    let index: number = this.data.findIndex(d => d === viz);\n    this.dataSource.data.splice(index, 1);\n    this.dataSource = new MatTableDataSource<Visualization>(this.dataSource.data);\n\n    const deletedViz = await this.vizService.deleteViz(viz);\n    deletedViz.subscribe();\n\n  }\n\n  editar(viz) {\n    this.route.navigate(['home/adminpanel/vizqueuedetail/' + viz._id]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/components/vizqueue-list/vizqueue-list.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { API } from '../config/db.config';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { Database } from '../../components/models/database.entity';\r\nimport { QueueDB } from '../../components/models/queueDB.entity';\r\n@Injectable()\r\nexport class DatabaseService {\r\n    public url: string;\r\n    constructor(private _http: Http) {\r\n        this.url = API.url;\r\n    }\r\n\r\n    async getDatabases() {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return await this._http.get(this.url + 'database', { headers: headers });\r\n\r\n    }\r\n\r\n\r\n    async deleteDatabase(database: Database) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return await this._http.delete(this.url + 'database/' + database._id, { headers: headers });\r\n    }\r\n\r\n    async createDatabase(database) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        const params = JSON.stringify(database);\r\n        return await this._http.post(this.url + 'database', params, { headers: headers });\r\n\r\n    }\r\n\r\n\r\n\r\n    async getQueueDatabases() {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return await this._http.get(this.url + 'queueDB', { headers: headers });\r\n\r\n    }\r\n\r\n    getQueueDatabase(id) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return this._http.get(this.url + 'queueDB/' + id, { headers: headers });\r\n    }\r\n    async createQueueDB(queueDB: QueueDB) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        const params = JSON.stringify(queueDB);\r\n        return await this._http.post(this.url + 'queueDB', params, { headers: headers });\r\n    }\r\n\r\n    async deleteQueueDB(queueDB: QueueDB) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return await this._http.delete(this.url + 'queueDB/' + queueDB._id, { headers: headers });\r\n\r\n    }\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    tiposCampos() {\r\n        return ['Númerico', 'Clase'];\r\n    }\r\n\r\n    databaseMock() {\r\n        return [{\r\n            nombre: \"ISOC\",\r\n            descripcion: \"Share of person tal Duis ipsum culpa cupidatat voluptate sunt exercitation est magna. Quis nostrud nisi laboris nostrud proident veniam magna consequat esse. Nulla sunt consequat minim incididunt. Minim laborum velit voluptate duis ea mollit adipisicing laboris eiusmod nisi ad consectetur ea officia. Incididunt nostrud cillum reprehenderit aliqua in ut occaecat fugiat magna tempor elit voluptate deserunt nisi. Cupidatat incididunt fugiat dolore nisi laboris ipsum amet. Lorem tempor nulla proident amet nisi fugiat quis proident magna reprehenderit id eiusmod est molli\",\r\n            campos: [{ nombre: \"unit\", tipo: \"Clase\" }, { nombre: \"Year\", tipo: \"Numerico\" }],\r\n        },\r\n        {\r\n            nombre: \"ISOC1\",\r\n            descripcion: \"Share of person tal Duis ipsum culpa cupidatat voluptate sunt exercitation est magna. Quis nostrud nisi laboris nostrud proident veniam magna consequat esse. Nulla sunt consequat minim incididunt. Minim laborum velit voluptate duis ea mollit adipisicing laboris eiusmod nisi ad consectetur ea officia. Incididunt nostrud cillum reprehenderit aliqua in ut occaecat fugiat magna tempor elit voluptate deserunt nisi. Cupidatat incididunt fugiat dolore nisi laboris ipsum amet. Lorem tempor nulla proident amet nisi fugiat quis proident magna reprehenderit id eiusmod est molli\",\r\n            campos: [{ nombre: \"unit\", tipo: \"Clase\" }, { nombre: \"Year\", tipo: \"Numerico\" }],\r\n        }\r\n            ,\r\n        {\r\n            nombre: \"ISOC2\",\r\n            descripcion: \"Share of person tal Duis ipsum culpa cupidatat voluptate sunt exercitation est magna. Quis nostrud nisi laboris nostrud proident veniam magna consequat esse. Nulla sunt consequat minim incididunt. Minim laborum velit voluptate duis ea mollit adipisicing laboris eiusmod nisi ad consectetur ea officia. Incididunt nostrud cillum reprehenderit aliqua in ut occaecat fugiat magna tempor elit voluptate deserunt nisi. Cupidatat incididunt fugiat dolore nisi laboris ipsum amet. Lorem tempor nulla proident amet nisi fugiat quis proident magna reprehenderit id eiusmod est molli\",\r\n            campos: [{ nombre: \"unit\", tipo: \"Clase\" }, { nombre: \"Year\", tipo: \"Numerico\" }],\r\n        }\r\n            , {\r\n            nombre: \"ISOC3\",\r\n            descripcion: \"Share of person tal Duis ipsum culpa cupidatat voluptate sunt exercitation est magna. Quis nostrud nisi laboris nostrud proident veniam magna consequat esse. Nulla sunt consequat minim incididunt. Minim laborum velit voluptate duis ea mollit adipisicing laboris eiusmod nisi ad consectetur ea officia. Incididunt nostrud cillum reprehenderit aliqua in ut occaecat fugiat magna tempor elit voluptate deserunt nisi. Cupidatat incididunt fugiat dolore nisi laboris ipsum amet. Lorem tempor nulla proident amet nisi fugiat quis proident magna reprehenderit id eiusmod est molli\",\r\n            campos: [{ nombre: \"unit\", tipo: \"Clase\" }, { nombre: \"Year\", tipo: \"Numerico\" }],\r\n        }];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/api/database.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { API } from '../config/db.config';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { User } from '../../components/models/user.entity';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    public url: string;\r\n    constructor(private _http: Http) {\r\n        this.url = API.url;\r\n    }\r\n\r\n    register(user) {\r\n        const hash = Md5.hashStr(user.password);\r\n        const userNew = Object.assign(Object.create(user), user);\r\n        userNew.password = hash;\r\n        const params = JSON.stringify(userNew);\r\n        const headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n        return this._http.post(this.url + 'user/register', params, { headers: headers }).map(res => res.json());\r\n\r\n    }\r\n\r\n    checkEmail(email: String) {\r\n        return this._http.get(this.url + 'user/checkemail/' + email);\r\n    }\r\n\r\n    login(user, gettoken = null) {\r\n        if (gettoken != null) {\r\n            user.gettoken = gettoken;\r\n        }\r\n\r\n        const userLogin = Object.assign(Object.create(user), user);\r\n        userLogin.password = Md5.hashStr(userLogin.password);\r\n        const params = JSON.stringify(userLogin);\r\n\r\n        const headers = new Headers({ 'Content-Type': 'application/json' });\r\n        return this._http.post(this.url + 'user/login', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    update(user) {\r\n        if (!user.password) {\r\n            delete user['password'];\r\n        } else {\r\n            const hash = Md5.hashStr(user.password);\r\n            user = Object.assign(Object.create(user), user);\r\n            user.password = hash;\r\n        }\r\n\r\n        const params = JSON.stringify(user);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return this._http.put(this.url + 'user/update-user/' + JSON.parse(this.getIdentity()).email, params, { headers: headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    addVizUser(viz) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n\r\n        const identity = this.getIdentity();\r\n        const mail = JSON.parse(localStorage.getItem('identity')).email;\r\n        const params = JSON.stringify(viz);\r\n        return this._http.post(this.url + 'user/viz/' + mail, params, { headers: headers }).map(res => res.json());\r\n\r\n    }\r\n\r\n    getUserViz() {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n\r\n        const identity = this.getIdentity();\r\n        const mail = JSON.parse(localStorage.getItem('identity')).email;\r\n        return this._http.get(this.url + 'user/viz/' + mail, { headers: headers }).map(res => res.json());\r\n\r\n    }\r\n\r\n\r\n    setIdentity(user: User) {\r\n        if (user) {\r\n            localStorage.setItem('identity', JSON.stringify(user));\r\n        }\r\n    }\r\n\r\n    setToken(token: string) {\r\n        if (token) {\r\n            localStorage.setItem('token', token);\r\n        }\r\n    }\r\n\r\n    getIdentity() {\r\n        return localStorage.getItem('identity');\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    isAdmin() {\r\n        return (JSON.parse(localStorage.getItem('identity')).role === 'ADMIN');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('identity');\r\n        localStorage.removeItem('token');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/api/user.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { API } from '../config/db.config';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { Visualization } from '../../components/models/visualization.entity';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class VizService {\r\n    public url: string;\r\n    constructor(private _http: Http, private userService: UserService) {\r\n        this.url = API.url;\r\n    }\r\n\r\n    async addViz(viz: Visualization) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        let httpParams = new HttpParams;\r\n        viz.databases.forEach(database => {\r\n            httpParams = httpParams.append('database', database);\r\n        });\r\n        viz.options.forEach(opcion => {\r\n            httpParams = httpParams.append(opcion.nombre, opcion.valor);\r\n        });\r\n        const equalViz = await this._http.get(this.url + 'viz/opciones?' + httpParams.toString(), { headers: headers });\r\n        equalViz.subscribe(response => {\r\n            const responseBody = response.json();\r\n            let findViz = false;\r\n            if (responseBody._id) {\r\n                this.userService.getUserViz().subscribe(vizList => {\r\n                    vizList.viz.forEach(visualization => {\r\n                        if (visualization._id === responseBody._id) {\r\n                            findViz = true;\r\n                        }\r\n                    });\r\n                    if (!findViz) {\r\n                        this.userService.addVizUser(responseBody).subscribe();\r\n                    }\r\n                });\r\n            } else {\r\n                const vizString = JSON.stringify(viz);\r\n                const newViz = this._http.post(this.url + 'viz', vizString, { headers: headers });\r\n                newViz.subscribe(responsePost => {\r\n                    this.userService.addVizUser(responsePost.json()).subscribe();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getVisualizations() {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return this._http.get(this.url + 'viz', { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getVizById(id) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return this._http.get(this.url + 'viz/' + id, { headers: headers }).map(res => res.json());\r\n    }\r\n    updateVizById(viz) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        const params = JSON.stringify(viz);\r\n        return this._http.put(this.url + 'viz/' + viz._id, params, { headers: headers });\r\n    }\r\n\r\n    deleteViz(viz) {\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n            , 'Authorization': this.getToken()\r\n        });\r\n        return this._http.delete(this.url + 'viz/' + viz._id, { headers: headers });\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    algoritmosKmeans() {\r\n        return ['Kmeans', 'EM'];\r\n    }\r\n\r\n    algoritmosTest() {\r\n        return ['Random Forest', 'Logistic Regression', 'LibSVM', 'Multilayer Perceptron'];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/api/viz.service.ts","export const API = {\r\n    url: 'api/'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/config/db.config.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from '../api/user.service';\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n\r\n    constructor(private _router: Router, private _userService: UserService) {\r\n\r\n    }\r\n\r\n    canActivate() {\r\n        if (this._userService.isAdmin()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/guards/admin.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from '../api/user.service';\r\n\r\n@Injectable()\r\nexport class LogginGuard implements CanActivate {\r\n\r\n    constructor(private _router: Router, private _userService: UserService) {\r\n\r\n    }\r\n\r\n    canActivate() {\r\n       if (this._userService.getIdentity() != null) {\r\n            return true;\r\n        }else {\r\n            this._router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/guards/loggin.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from '../api/user.service';\r\n\r\n@Injectable()\r\nexport class ProtectLogginGuard implements CanActivate {\r\n\r\n    constructor(private _router: Router, private _userService: UserService) {\r\n\r\n    }\r\n\r\n    canActivate() {\r\n        if (this._userService.getIdentity() != null) {\r\n            this._router.navigate(['/home']);\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/guards/protectLoggin.guard.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { AbstractControl, Validator, NG_ASYNC_VALIDATORS } from '@angular/forms';\r\nimport { UserService } from '../api/user.service';\r\n\r\n@Directive({\r\n    selector: '[asyncEmailValidator]',\r\n    providers: [\r\n        { provide: NG_ASYNC_VALIDATORS, useExisting: EmailValidatorDirective, multi: true }\r\n    ]\r\n})\r\nexport class EmailValidatorDirective implements Validator {\r\n    constructor(private _userService: UserService, @Attribute('actualEmail') public actualEmail: boolean) {\r\n    }\r\n\r\n    validate(c: AbstractControl) {\r\n        return new Promise(resolve =>\r\n            this._userService.checkEmail(c.value).subscribe(response => {\r\n                if (response) {\r\n                    if (this.actualEmail && JSON.parse(this._userService.getIdentity()).email === c.value ) {\r\n                        resolve(null);\r\n                    }else{\r\n                        resolve({ asyncInvalid: true });\r\n                    }\r\n\r\n                }\r\n            }, error => {\r\n                resolve(null);\r\n            }));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/validator/emailUniq.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[validateEqual]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: EqualValidator, multi: true }\r\n    ]\r\n})\r\nexport class EqualValidator implements Validator {\r\n\r\n    constructor( @Attribute('validateEqual') public validateEqual: string,\r\n        @Attribute('reverse') public reverse: string) {\r\n\r\n    }\r\n\r\n    private get isReverse() {\r\n        if (!this.reverse) return false;\r\n        return this.reverse === 'true' ? true : false;\r\n    }\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        // self value\r\n        let v = c.value;\r\n\r\n        // control value\r\n        let e = c.root.get(this.validateEqual);\r\n        // value not equal\r\n        if (e && v !== e.value && !this.isReverse) {\r\n            return {\r\n                validateEqual: false\r\n            }\r\n        }\r\n\r\n        // value equal and reverse\r\n        if (e && e.errors && v === e.value && this.isReverse) {\r\n            delete e.errors['validateEqual'];\r\n            if(!Object.keys(e.errors).length) e.setErrors(null);\r\n        }\r\n\r\n        // value not equal and reverse\r\n        if (e && v !== e.value && this.isReverse) {\r\n            e.setErrors({\r\n                validateEqual: false\r\n            })\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/app/services/validator/equal-validate.directive.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// F:/projects/datavisualizer-fronted/src/main.ts"],"sourceRoot":"webpack:///"}